
Public Class MemberRegistration
    Inherits System.Web.UI.Page

    Private Sub MemberRegistration_Init(sender As Object, e As System.EventArgs) Handles Me.Init



    End Sub

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        If Not IsPostBack Then

            'SOLUTION 2: CHANGE THE BUTTON SUBMIT JS CODE SO THAT IT

            'DISABLES WHEN THE FORM IS VALID, PRIOR TO SUBMISSION

            'build the JS

            Dim sb As New StringBuilder()

            sb.Append("if (typeof(Page_ClientValidate) == 'function') { ")

            'if client-side does not validate, stop (this supports validation groups)

            'BUGFIX: must save, then restore the page validation / submission state, otherwise

            'when the validation fails, it prevents the FIRST autopostback from other controls

            sb.Append("var oldPage_IsValid = Page_IsValid; var oldPage_BlockSubmit = Page_BlockSubmit;")

            sb.Append("if (Page_ClientValidate('" + btnSignUp.ValidationGroup & "') == false) {")

            sb.Append(" Page_IsValid = oldPage_IsValid; Page_BlockSubmit = oldPage_BlockSubmit; return false; }} ")

            'change button text and disable it

            sb.Append("this.value = 'Processing...';")

            sb.Append("this.disabled = true;")

            'insert the call to the framework JS code that does the postback of the form in the client

            'The default code generated by ASP (WebForm_DoPostbackWithOptions) will not

            'submit because the button is disabled (this is new in 2.0)

            sb.Append(ClientScript.GetPostBackEventReference(btnSignUp, Nothing) & ";")

            'BUGFIX: MUST RETURN AFTER THIS, OTHERWISE IF THE BUTTON HAS UseSubmitBehavior=false

            'THEN ONE CLICK WILL IN FACT CAUSE 2 SUBMITS, DEFEATING THE WHOLE PURPOSE

            sb.Append("return true;")

            Dim submit_button_onclick_js As String = sb.ToString()

            btnSignUp.Attributes.Add("onclick", submit_button_onclick_js)

        End If
    End Sub

    Protected Sub btnCheckMembership_Click(sender As Object, e As EventArgs) Handles btnCheckMembership.Click
        'Check Member If exists

        Dim member As New ememberBLL

        'Check first on emember user table
        If member.IsMemberCodeExists(txtMemberCode.Text) Then
            CustomError.InnerText = "The member is already registered"
            Exit Sub
        End If

        'Validate membership with birthdate
        If Not member.ValidateMembershipInformation(txtMemberCode.Text, rdBirthdate.SelectedDate) Then
            CustomError.InnerText = member.LoginMessage
            Exit Sub
        End If
        'Veify on membership db
        member.GetMembershipInformation(txtMemberCode.Text)

        If Not member.AccountStatus Is Nothing Then
            If member.AccountStatus.Contains("ACTIVE") Then

                DisableEnableFields(False)
                txtFirstname.Text = member.Firstname
                txtLastname.Text = member.Lastname
                txtCompany.Text = member.Company
                ' rdBirthdate.SelectedDate = member.Birthday
                btnCheckMembership.Enabled = False
                ValidationSummary1.Enabled = True
                hdnAccountCode.Value = member.AccountCode
                CustomError.InnerText = ""

            Else

                DisableEnableFields(True)
                btnCheckMembership.Enabled = True
                ValidationSummary1.Enabled = False

                Select Case member.AccountStatus
                    Case "VERIFY MEMBERSHIP", "VERIFY RENEWAL FROM MARKETING / SALES"
                        CustomError.InnerText = "Couldn't process registration. Please Call " & ConfigurationManager.AppSettings("ContactNoRegistration") & " to verify validity."
                    Case "VERIFY PAYMENT WITH RMD"
                        CustomError.InnerText = "Couldn't process registration. Please Call " & ConfigurationManager.AppSettings("ContactNoRegistration") & " for payment verification."
                    Case Else
                        CustomError.InnerText = "Couldn't process registration. Please Call " & ConfigurationManager.AppSettings("ContactNoRegistration") & " to verify membership status."
                End Select

            End If
        Else 'NO RECORD FOUND

            DisableEnableFields(True)
            btnCheckMembership.Enabled = True
            ValidationSummary1.Enabled = False
            CustomError.InnerText = "Member code does not exist"

        End If



    End Sub

    Private Sub DisableEnableFields(state As Boolean)

        txtAddress.ReadOnly = state
        txtEmailAddress.ReadOnly = state
        txtFirstname.ReadOnly = state
        txtLastname.ReadOnly = state
        txtMobile.ReadOnly = state
        txtPassword.ReadOnly = state
        txtPassword2.ReadOnly = state
        txtPhone.ReadOnly = state
        ' rdBirthdate.Enabled = state

    End Sub

    Protected Sub cusCustom_ServerValidate(source As Object, args As System.Web.UI.WebControls.ServerValidateEventArgs) Handles cusCustom.ServerValidate
        If (args.Value.Length >= 6) Then
            args.IsValid = True
        Else
            args.IsValid = False
        End If
    End Sub

    Protected Sub btnSignUp_Click(sender As Object, e As EventArgs) Handles btnSignUp.Click
        Dim bll As New ememberBLL

        If bll.IsMemberCodeExists(txtMemberCode.Text) Then
            CustomError.InnerText = "The member is already registered."
            Exit Sub
        End If

        If bll.IsEmailExists(Trim(txtEmailAddress.Text)) Then
            CustomError.InnerText = "Email is already taken."
            Exit Sub
        End If


        bll.GetMembershipInformation(txtMemberCode.Text)
        With bll
            .AccountCode = .AccountCode
            .Company = txtCompany.Text
            .UserCode = Trim(txtEmailAddress.Text)
            .Password = txtPassword.Text
            .Firstname = txtFirstname.Text
            .Lastname = txtLastname.Text
            .Birthday = rdBirthdate.SelectedDate
            .Address = txtAddress.Text
            .Cellphone = txtMobile.Text
            .EmailAddress = Trim(txtEmailAddress.Text)
            .MemberCode = txtMemberCode.Text
            If .RegisterMember() Then Response.Redirect("~/ActivationSent.aspx?s=1&t=0")

            CustomError.InnerText = "There is an error processing your registration. Please try again."

        End With

    End Sub
End Class