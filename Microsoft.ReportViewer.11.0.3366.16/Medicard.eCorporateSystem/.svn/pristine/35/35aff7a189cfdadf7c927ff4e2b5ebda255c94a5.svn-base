@model IdReplacement
@{
    var resonList = new SelectList(ViewBag.Reasons, "Id", "Description", Model.ReasonId);
    var dependentList = new SelectList(ViewBag.Dependents, "Id", "FullName", Model.DependentId);
    var memberList = new SelectList(ViewBag.Members, "Id", "FullName", Model.MemberId);
}

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.Guid)
@Html.HiddenFor(model => model.CrBy)
@Html.HiddenFor(model => model.CrById)
@Html.HiddenFor(model => model.CrDate)
@Html.HiddenFor(model => model.EndorsementBatchId)
@Html.HiddenFor(model => model.RequestDate)
@Html.HiddenFor(model => model.AccountCode)
@Html.HiddenFor(model => model.Status)
@Html.HiddenFor(model => model.DocumentFileName)
@Html.HiddenFor(model => model.DocumentFile)
@Html.HiddenFor(model => model.DocumentContentType)

<div class="row">
    <div class="col-lg-12 col-centered">
        <div id="panel-title">Member Request</div>
        <div class="panel panel-default">
            <div class="panel-body">
                <div id="panel-container">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-12">
                                <div id="PersonalDetails">
                                    <div class="row form-padding">
                                        <div class="col-lg-12">
                                            <h4 class="form-title">ID Replacement</h4>
                                            <div class="row">  
                                                <div class="col-lg-12" id="MemberContainer">
                                                    <div class="form-group">
                                                        <label class="control-label col-lg-2">@Html.Label("MemberId", "Member Name:")</label>
                                                        <div class="col-lg-8">
                                                            @Html.DropDownList("MemberId", (IEnumerable<SelectListItem>)memberList, "-- Select --", ViewBag.HtmlMemberAttributes as object)
                                                            @Html.ValidationMessageFor(model => model.MemberId)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <label class="control-label col-lg-2">@Html.LabelFor(model => model.RequestFor)</label>
                                                        <div class="col-lg-8">
                                                            @Html.EnumDropDownListFor(model => model.RequestFor, ViewBag.HtmlDropDownAttributes as object)
                                                            @Html.ValidationMessageFor(model => model.RequestFor)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <label class="control-label col-lg-2">@Html.LabelFor(model => model.ReasonId)</label>
                                                        <div class="col-lg-8">
                                                            @Html.DropDownList("ReasonId", (IEnumerable<SelectListItem>)resonList, "-- Select --", ViewBag.HtmlDropDownAttributes as object)
                                                            @Html.ValidationMessageFor(model => model.ReasonId)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <label class="control-label col-lg-2">@Html.LabelFor(model => model.DependentId)</label>
                                                        <div class="col-lg-8">
                                                            @Html.DropDownList("DependentId", (IEnumerable<SelectListItem>)dependentList, "-- Select --", ViewBag.HtmlDropDownAttributes as object)
                                                            @Html.ValidationMessageFor(model => model.DependentId)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <div class="col-lg-2">
                                                            @Html.Label("FileUploaded", "File Upload:")
                                                        </div>
                                                        <div class="col-lg-4" id="FileInput">
                                                            @Html.TextBoxFor(model => model.FileWrapper, new { @Type = "file" })
                                                            <input id="ClearFile" onclick="clearFileInput()" type="button" value="Clear File" class="btn btn-primary btn-xs" />
                                                            @Html.ValidationMessageFor(model => model.FileWrapper)
                                                        </div>
                                                        @if (Model.Id != 0)
                                                        {
                                                            <div class="col-lg-6">
                                                                @Html.Label("CurrentUploaded", "Existing File:")
                                                                @if (!string.IsNullOrEmpty(Model.DocumentFileName))
                                                                {
                                                                    @Html.ActionLink(Model.DocumentFileName, "DownloadFile", new { guid = Model.Guid }, new { @class = "" })
                                                                }
                                                                else
                                                                {
                                                                    <label for="NoFile">No file exist.</label>
                                                                }
                                                                <br />
                                                                <input style="margin-top:10px" id="ClearExistingFile" onclick="clearExistingFileInput($(this))" type="button" value="Clear Existing File" class="btn btn-primary btn-xs" />
                                                            </div>

                                                        }
                                                    </div>
                                                </div>
                                                <div class="col-lg-12">
                                                    <div class="form-group">
                                                        <label class="control-label col-lg-2">@Html.LabelFor(model => model.Remarks)</label>
                                                        <div class="col-lg-8">
                                                            @Html.TextAreaFor(model => model.Remarks, ViewBag.HtmlControlReadOnlyAttributes as object)
                                                            @Html.ValidationMessageFor(model => model.Remarks)
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        


