@model PagedList.IPagedList<DependentCancellation>

@{
    ViewBag.Title = "Cancellation of Dependent Membership";
    var dependentCancellation = new DependentCancellation();
}

<div class="row">
    <div class="col-lg-12">
        <h2 class="title">Cancellation of Dependent Membership</h2>
    </div>
</div>

<div class="row">
    <div class="col-lg-6 pageList-margin">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        <p class="pager-padding" style="float: right">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </p>
    </div>
    <div class="col-lg-6">
        <p style="float: right">
            @Html.ActionLink("Add", "Create", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })

        </p>
    </div>
</div>
<table class="table table-custom">
    <tr>
        <th>
            @Html.DisplayNameFor(modelItem => dependentCancellation.RequestDate)
        </th>
        <th>
            @Html.DisplayNameFor(modelItem => dependentCancellation.RequestEffectivityDate)
        </th>
        <th>
            Dependent Name
        </th>
        <th>
            Reason
        </th>
        <th>
            Request Status
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(model => item.RequestDate)
            </td>
            <td>
                @Html.DisplayFor(model => item.RequestEffectivityDate)
            </td>
            <td>
                @Html.DisplayFor(model => item.DependentName)
            </td>
            <td>
                @Html.DisplayFor(model => item.Reason.Description)
            </td>
            <td>
                @Html.DisplayFor(model => item.Status)
            </td>
            <td>
                @Html.ActionLink("View Data", "Edit", new { guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                @if (item.Status == Corelib.Enums.RequestStatus.Saved)
                {
                    @Html.ActionLink("Delete", "#", new { guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                }
            </td>

        </tr>
    }
</table>

@section Scripts{
    @Html.Partial("_Message")
    <script type="text/javascript">
        $(document).ready(function () {
            if (window.location.href.indexOf("name_desc") > -1) {
                $('.sort-table').find('i').toggleClass('glyphicon-chevron-down').toggleClass('glyphicon-chevron-up');
            }
        });
    </script>
}


