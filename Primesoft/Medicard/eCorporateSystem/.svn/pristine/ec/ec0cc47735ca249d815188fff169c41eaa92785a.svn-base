@model PagedList.IPagedList<AdditionalDependent>
@{
    ViewBag.Title = "Additional Dependents";
    Layout = "~/Areas/CorporateAdministrator/Views/Shared/_AccountManagerLayout.cshtml";
    IEnumerable<Member> members = ViewBag.Members;
}

<div class="row">
    <div class="col-lg-8">
        <h2 class="title">Application for Additional Dependents</h2>
    </div>
    @using (Html.BeginForm("Index", "AdditionalDependents", FormMethod.Get, new { }))
    {
        <div class="col-lg-4">
            <div class="input-group">
                <input type="text" value="@ViewBag.SearchValue" readonly="readonly" id="click" class="form-control space-cr search-filter" placeholder="Search & Filter">
                <div class="input-group-btn">
                    <button type="button" class="dropdown-toggle btn-dd btn-default" data-toggle="dropdown" tabindex="-1">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="rightMenu dropdown-menu">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="row"><div class="col-sm-11 col-centered"><h4 class="form-title ">Search & Filter</h4></div></div>
                                <div class="form-group">
                                    <label class="control-label col-lg-12">Member Name:</label>
                                    <div class="col-lg-12">
                                        <input type="text" value="@ViewBag.MemberName" name="memberName" onclick="return false;" class="form-control input-sm" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-lg-12">Dependent Name:</label>
                                    <div class="col-lg-12">
                                        <input type="text" value="@ViewBag.DependentName" name="dependentName" onclick="return false;" class="form-control input-sm" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-lg-12">Application Date:</label>
                                    <div class="col-lg-12">
                                        <input type="text" value="@ViewBag.ApplicationDate" name="applicationDate" onclick="return false;" class="form-control last-input" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary btn-grp btn-search"
                        tabindex="-1">
                    Search
                </button>
            </div>

        </div>
    }
</div>

<div class="row">
    <div class="col-lg-6 pageList-margin">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        <p class="pager-padding" style="float: right">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </p>
    </div>
    <div class="col-lg-6">
        <p style="float: right">
            @Html.ActionLink("Add", "Create", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })
        </p>
    </div>
</div>


<table class="table table-custom">
    <thead>
        <tr>
            <th>
                Name of Member
            </th>
            <th>
                Name of Dependent
            </th>
            <th>
                Gender
            </th>
            @*<th>
                    Civil Status
                </th>
                <th>
                        Age
                    </th>
                    <th>
                        Date of Birth
                    </th>
                    <th>
                        Plan
                    </th>*@
            <th>
                Relationship
            </th>
            <th>
                Status
            </th>
            <th>
                &nbsp;
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var member = members.FirstOrDefault(t => t.Id == item.MemberId) ?? new Member();
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => member.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FullName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.CivilStatus)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.Age)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfBirth)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.OptionalPlan)
                        </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.Relationship)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @if (item.Status == Corelib.Enums.RequestStatus.CorporateAdminApproved || item.Status == Corelib.Enums.RequestStatus.CorporateAdminDisapproved || item.Status == Corelib.Enums.RequestStatus.CancelledRequest)
                    {
                        @Html.ActionLink("View Data", "Edit", new { guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                        @Html.ActionLink("Medical History", "MedicalHistory", new { guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })

                    }
                    @if (item.Status == Corelib.Enums.RequestStatus.Submitted)
                    {
                        @Html.ActionLink("Approve", "ApproveApplication", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                        @Html.ActionLink("Disapprove", "DisapproveApplication", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-danger btn-xs btn-margin" })
                        @Html.ActionLink("View Data", "Edit", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                        @Html.ActionLink("Medical History", "MedicalHistory", new { guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                        @Html.ActionLink("Cancel", "CancelApplication", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-danger btn-xs btn-margin" })
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Html.Partial("_Message")
    <script type="text/javascript">
        $(document).ready(function () {
            $('input[name="applicationDate"]').datepicker();
            $(function () {
                $('.dropdown-menu input , .dropdown-menu select').click(function (event) {
                    event.stopPropagation();
                });
            });
            $(function () {
                //$(".dropdown-toggle").dropdown('toggle'); // this works
                $('#click').click(function (e) {
                    e.stopPropagation();
                    $(".dropdown-toggle").dropdown('toggle');// this doesn't
                });
            });
        });
    </script>
}
