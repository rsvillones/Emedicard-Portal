@model PagedList.IPagedList<ActionMemo>


@if (Model.PageCount > 1)
{
    @Html.PagedListPager(Model, page => Url.Action("GetMyEmedActionMemos", new { page, accountCode = ViewBag.AccountCode, username = ViewBag.Username }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast, new AjaxOptions() { UpdateTargetId = "MyActionMemosAjaxContainer", OnBegin = "OnMyEmedActionMemoBegin()" }))
    <br /><br /><br />
}

<table class="table table-fixed">
    <thead>
        <tr>
            <th style="width:24%">
                <label>Date Issued</label>
            </th>
            <th style="width:21%">
                <label>Type</label>
            </th>
            <th style="width:20%">
                <label>Issued To</label>
            </th>
            <th style="width:23%">
                <label>Details</label>
            </th>
            <th style="width:12%">
                &nbsp;
            </th>
        </tr>
    </thead>
</table>
<div class="scrollable-tables" style="margin-top: -3px !important;height: 130px !important;margin-bottom: 0 !important">
    <table class="table table-fixed">
        <tbody>
            @if (Model != null && Model.Count() > 0)
            {
                foreach (var item in Model)
                {
                    <tr>
                        <td style="width:25%">
                            <p class="box">
                                @Html.DisplayFor(model => item.DateIssued)
                                @if (item.IsNew)
                                {
                                    <label class="new">!</label>
                                }
                                else
                                {
                                    <label class="new">&nbsp;</label>
                                }
                            </p>
                        </td>
                        <td style="width:20%">
                            @Html.DisplayFor(model => item.Type)
                        </td>
                        <td style="width:20%">
                            @if (item.Dependent != null)
                            {
                                @Html.DisplayFor(mode => item.Dependent.FullName)
                            }
                            else if (item.Member != null)
                            {
                                @Html.DisplayFor(mode => item.Member.FullName)
                            }
                        </td>
                        <td style="width:25%">
                            @Html.DisplayFor(model => item.Details)
                        </td>
                        <td style="width: 10%">
                            @if (Helper.IsCorporateAdmin() && User.IsInRole("CanEditActionMemoManagement") && item.Status == Corelib.Enums.ActionMemoStatus.New)
                            {
                                @Html.ActionLink("Reply", "Reply", "ActionMemos", new { area = "CorporateAdministrator", accountCode = item.EndorsementBatch.AccountCode, guid = item.Guid }, new { @class = "" })
                            }
                            else if (Helper.IsCorporateAdmin() && User.IsInRole("CanEditActionMemoManagement") && item.Status != Corelib.Enums.ActionMemoStatus.New)
                            {
                                @Html.ActionLink("Detail", "Reply", "ActionMemos", new { area = "CorporateAdministrator", accountCode = item.EndorsementBatch.AccountCode, guid = item.Guid }, new { @class = "" })
                            }
                            else if (Helper.IsMember())
                            {
                                //var display = !((AccountSetting)ViewBag.AccountSetting).DirectlySubmitToUrg && item.Status == Corelib.Enums.ActionMemoStatus.New ? "Reply" : "Details";
                                if (item.Status == Corelib.Enums.ActionMemoStatus.New)
                                {
                                    @Html.ActionLink("Reply", "Reply", "ActionMemos", new { area = "Member", guid = item.Guid }, new { @class = "" })
                                }
                                else
                                {
                                    @Html.ActionLink("Details", "Reply", "ActionMemos", new { area = "Member", guid = item.Guid }, new { @class = "" })
                                }
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                @Html.Partial("_NoData", 5)
            }
        </tbody>
    </table>
</div>

<script type="text/javascript">
    function OnMyEmedActionMemoBegin() {
        $('#MyActionMemosAjaxContainer').html('<div id="fountainG"><div id="fountainG_1" class="fountainG"></div><div id="fountainG_2" class="fountainG"></div><div id="fountainG_3" class="fountainG"></div><div id="fountainG_4" class="fountainG"></div><div id="fountainG_5" class="fountainG"></div><div id="fountainG_6" class="fountainG"></div><div id="fountainG_7" class="fountainG"></div><div id="fountainG_8" class="fountainG"></div></div>');
    }
</script>