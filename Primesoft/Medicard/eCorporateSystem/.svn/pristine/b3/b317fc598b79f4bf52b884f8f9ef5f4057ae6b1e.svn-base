@model PagedList.IPagedList<MemberRequest>

@{
    ViewBag.Title = "Member Requests";
    Layout = "~/Areas/CorporateAdministrator/Views/Shared/_AccountManagerLayout.cshtml";

    IEnumerable<Corelib.Models.Dependent> dependents = ViewBag.Dependents;
}

<div class="row">
    <div class="col-lg-6 pageList-margin">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        <p class="pager-padding" style="float: right">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </p>
    </div>
    <div class="col-lg-6">
        <p style="float: right">
            @Html.ActionLink("ID Replacement", "IdReplacement", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })
            @Html.ActionLink("Amendment", "Amendments", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })
        </p>
    </div>
</div>

<table class="table table-custom">
    <tr>
        <th></th>
        <th>
            Request Date
        </th>
        <th>
            Request Effectivity Date
        </th>
        <th>
            Preferred Schedule Date
        </th>
        <th>
            Request Type
        </th>
        <th>
            Request For
        </th>
        <th>
            Data Type
        </th>
        <th>
            Change Data From
        </th>
        <th>
            Change Data To
        </th>
        <th>
            Request Reason
        </th>
        <th>
            Name of Dependent
        </th>
        <th>
            Remarks
        </th>
        <th>
            Request Status
        </th>
        <th>
            Document Type
        </th>
    </tr>

    @foreach (var item in Model)
    {
        var dependentName = item.DependentId != null ? dependents.FirstOrDefault(t => t.Id == item.Id).FullName : "";
        <tr>
            <td></td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EffectivityDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PreferredScheduleDate)
            </td>
            <td>
                @if (item.RequestType == Corelib.Enums.RequestType.Amendment)
                {
                    @Html.ActionLink(item.RequestType.ToString(), "Amendments", new { accountCode = ViewBag.AccountCode,guid = item.Guid })
                }
                else
                {
                    @Html.ActionLink(item.RequestType.ToString(), "IdReplacement", new { accountCode = ViewBag.AccountCode,guid = item.Guid })
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RequestFor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DataType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ChangeDataFrom)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ChangeDataTo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Reason.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => dependentName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Remarks)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DocumentType.Name)
            </td>
        </tr>
    }
</table>

@section Scripts{
    @Html.Partial("_Message")
    <script type="text/javascript">
        $(document).ready(function () {
            if (window.location.href.indexOf("name_desc") > -1) {
                $('.sort-table').find('i').toggleClass('glyphicon-chevron-down').toggleClass('glyphicon-chevron-up');
            }
        });
    </script>
}


