using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Corelib;
using Microsoft.Reporting.WebForms;

namespace WebUI.Reports.UtilizationReporting
{
    public partial class MemberAllService : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (IsPostBack) return;
            //FillDropdown();
            //if (MemberCodeDropDown.Items.Count <= 0) return;
            GenerateReport(sender, e);
        }

        protected void GenerateReport(object sender, EventArgs e)
        {
            using (var db = new UtilizationDataContext())
            {
                var memberCodeParam = new ReportParameter("MemberCode", MemberCode.Text);
                var memberFullNameParam = new ReportParameter("MemberName", GetFullName(MemberCode.Text, Request["accountCode"]));
                var startDate = new ReportParameter("StartDate", StartDateText.Text);
                var endDate = new ReportParameter("EndDate", EndDateText.Text);
                UtilizationReportMemberAllServiceViewer.LocalReport.DataSources.Clear();
                UtilizationReportMemberAllServiceViewer.LocalReport.ReportPath = Server.MapPath("~/Reports/UtilizationReporting/MemberAllService.rdlc");
                UtilizationReportMemberAllServiceViewer.LocalReport.SetParameters(new ReportParameter[] { memberCodeParam, memberFullNameParam, startDate, endDate });

                var memberAllService = UtilizationHelper.GetUtilizationMemberAllServices(db, MemberCode.Text);
                memberAllService = memberAllService.Where(t => t.AvailmentFrom >= UtilizationHelper.ReportParameterDateTime(StartDateText.Text) && t.AvailmentFrom <= UtilizationHelper.ReportParameterDateTime(EndDateText.Text));
                UtilizationReportMemberAllServiceViewer.LocalReport.DataSources.Add(new ReportDataSource("MemberAllService", memberAllService));
            }
        }
        //protected void FillDropdown()
        //{
        //    using (var db = new LegacyDataContext())
        //    {
        //        var activeMembers = LegacyHelper.GetAllMembers(db, Request["accountCode"]);

        //        var memberCodeExceptions = UtilizationHelper.GetMemberCodeExceptions(Request["accountCode"]);
        //        var planIdExceptions = UtilizationHelper.GetPlanIdExceptions(Request["accountCode"]);
        //        activeMembers = activeMembers.Where(t => !memberCodeExceptions.Contains(t.Code));
        //        activeMembers = activeMembers.Where(t => !planIdExceptions.Contains(t.AppliedPlan));
        //        MemberCodeDropDown.Items.Insert(0, new ListItem("Please select Member", ""));
        //        MemberCodeDropDown.DataSource = activeMembers.OrderBy(t=>t.FullName);
        //        MemberCodeDropDown.DataValueField = "Code";
        //        MemberCodeDropDown.DataTextField = "FullName";
        //        MemberCodeDropDown.DataBind();
        //    }
        //}

        protected string GetFullName(string MemberCode, string accountCode)
        {
            using (var db = new LegacyDataContext())
            {
                var activeMember = LegacyHelper.GetActiveMembers(db, accountCode).FirstOrDefault(t => t.Code == MemberCode);
                return activeMember != null ? activeMember.FullName : "";
            }
        }
    }
}