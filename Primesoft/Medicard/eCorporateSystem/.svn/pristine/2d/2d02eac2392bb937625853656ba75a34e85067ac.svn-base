@model EndorsementBatch

@{
    ViewBag.Title = "Cancellation of Membership";
    Layout = "~/Areas/CorporateAdministrator/Views/Shared/_AccountManagerLayout.cshtml";
}

@using (Html.BeginForm("BatchUploadCancellation", "Endorsement", new { accountCode = ViewBag.AccountCode }))
{
    @Html.ValidationSummary(false);
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id);
    @Html.HiddenFor(model => model.Guid);
    @Html.HiddenFor(model => model.ReferenceNumber);
    @Html.HiddenFor(model => model.Filename);
    @Html.HiddenFor(model => model.GuidFilename);
    @Html.HiddenFor(model => model.Timestamp);
    @Html.HiddenFor(model => model.Date);
    @Html.HiddenFor(model => model.EndorsementType);
    @Html.HiddenFor(model => model.BatchType);
    @Html.HiddenFor(model => model.AccountCode);

    <div class="row">
        <div class="col-lg-12 col-centered">
            <div id="panel-title">Cancellation of Membership</div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="panel-container">
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div id="BatchUploadRenewal">
                                        <div class="row form-padding">
                                            <div class="col-lg-12">
                                                <h4 class="form-title" style="margin-bottom: 1em">Batch Upload for Cancellation of Membership</h4>
                                                <div class="row">
                                                    <div class="col-lg-8 form-group">
                                                        <label class="control-label col-lg-4">Submission Deadline:</label>
                                                        <div class="col-lg-8 editor-form-control">
                                                            @Html.EditorFor(model => model.Deadline, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                            @Html.ValidationMessage("DeadLineError", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-8 form-group">
                                                        <label class="control-label col-lg-4">Remarks:</label>
                                                        <div class="col-lg-8">
                                                            @Html.TextAreaFor(model => model.Remarks, ViewBag.HtmlControlReadOnlyAttributes as object)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-8 form-group">&nbsp;</div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="row">
                                                            <div class="col-lg-12">
                                                                @if (ViewBag.ReadOnly == null || !ViewBag.ReadOnly)
                                                                {
                                                                    <label class="inline">Allowed file extension: xlsm.</label>
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="row">
                                                            <div class="col-lg-12">
                                                                <input id="DownloadActiveMembersButton" type="button" class="btn-download-active" value="Download Template" />
                                                                @if (ViewBag.ReadOnly == null || !ViewBag.ReadOnly)
                                                                {
                                                                    <input type="file" id="uploadNewApplication" name="uploadNewApplication" style="background-color:blue" />
                                                                    <input type="hidden" id="uploadStringNewApplication" name="uploadStringNewApplication" />

                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div id="RowsContainer">
                                                            @if (Model.CancelledMembers != null && Model.CancelledMembers.Count > 0)
                                                            {
                                                                <div class="row">
                                                                    <div class="col-lg-12">
                                                                        <input type="checkbox" id="ShowOnlyError" checked="checked" />
                                                                        <label for="ShowOnlyError">Show Only Error(s)</label>
                                                                    </div>
                                                                </div>
                                                                <table class="sticky-table">
                                                                    <thead>
                                                                        <tr>
                                                                            <th>Name</th>
                                                                            <th>Last Name</th>
                                                                            <th>First Name</th>
                                                                            @*<th>Middle Name</th>*@
                                                                            <th>Member Code</th>
                                                                            <th>Date Cancelled</th>
                                                                            @if (ViewBag.ReadOnly == null || !ViewBag.ReadOnly)
                                                                            {
                                                                                <th>&nbsp;</th>
                                                                            }
                                                                        </tr>
                                                                    </thead>
                                                                    <tbody id="ApplicationVerificationBody">
                                                                        @foreach (var cancelledMembers in Model.CancelledMembers)
                                                                        {
                                                                            @Html.Partial("_CancelledMembers", cancelledMembers)
                                                                        }
                                                                    </tbody>
                                                                </table>
                                                                <div class="row">
                                                                    <div class="col-lg-12">
                                                                        <div class="form-actions no-color" style="text-align: right">
                                                                            &nbsp;
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                                <div class="row">
                                                                    <div class="col-lg-12">
                                                                        <div class="no-color" style="text-align: right">
                                                                            @if (ViewBag.ReadOnly == null || !ViewBag.ReadOnly)
                                                                            {
                                                                                <input type="submit" value="Save" name="submit" class="btn btn-primary" />
                                                                                <input type="submit" value="Save and Process" name="submit" class="btn btn-primary" />
                                                                            }
                                                                            @Html.ActionLink("Back to List", "Index", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        var errorContainer = $('.table-error:contains("required"), .table-error:contains("cancelled"),.table-error:contains("Invalid Email"), .table-error:contains("already exists"), .table-error:contains("active subscription")');
    function deleteMember(button) {
        var tr = $(button).parent().parent();
        tr.remove();
    }
    $(document).ready(function () {
        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");
        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) {
            // If Internet Explorer
            $("#uploadNewApplication").uploadify({
                'swf': '@Url.Content("~/Content/uploadify/uploadify.swf")',
                'uploader': '@Url.Action("UploadCancellationExcel")',
                'formData': {
                    'accountCode': '@ViewBag.AccountCode',
                    'endorsementBatchId': '@Model.Id',
                    'endorsementBatchGuid': '@Model.Guid'
                },
                'multi': false,
                'auto': true,
                'method': 'post',
                'buttonText': 'Select File',
                'onUploadError': function (file, data) {
                    alert(file);
                },
                'onUploadSuccess': function (file, data) {
                    var json = $.parseJSON(data);
                    if (json.Success) {
                        $('#Filename').val(json.Filename);
                        $('#GuidFilename').val(json.GuidFilename);
                        $('#RowsContainer').html(json.TableData);
                        $('form').attr('action', '@Url.Action("ValidateUploadedCancellationExcel", new { accountCode = @ViewBag.AccountCode })');
                        $('form').submit();
                    }
                    else {
                        alert(json.ErrorMessage);
                    }
                }
            });
        }
        else {
            // If another browser
            $("#uploadNewApplication").uploadifive({
                'method': 'post',
                'formData': {
                    'accountCode': '@ViewBag.AccountCode',
                    'endorsementBatchId': '@Model.Id'
                },
                'uploadScript': '/CorporateAdministrator/Endorsement/UploadCancellationExcel',
                'fileObjName': 'fileData',
                'buttonText': 'Select File',
                'multi': false,
                'auto': true,
                'height': 40,
                'width': 60,
                'removeCompleted': true,
                'onError': function (file, data) {
                    alert(file);
                },
                'onUploadComplete': function (file, data) {
                    var json = $.parseJSON(data);
                    if (json.Success) {
                        $('#Filename').val(json.Filename);
                        $('#GuidFilename').val(json.GuidFilename);
                        $('#RowsContainer').html(json.TableData);
                        $('form').attr('action', '@Url.Action("ValidateUploadedCancellationExcel", new { accountCode = @ViewBag.AccountCode })');
                        $('form').submit();
                    }
                    else {
                        alert(json.ErrorMessage);
                    }
                }
            });
        }

        $('#DownloadActiveMembersButton').click(function (e) {
            e.preventDefault();
            window.location.href = '@(Url.Action("DownloadCancellationTemplate", new { @accountCode = ViewBag.AccountCode }))';
        });

        $('.selectpicker').each(function (index, select) {
            var value = $(select).attr('data-value');
            $(select).selectpicker();
            $(select).selectpicker('val', eval(value));
        });

        $('.selectpicker').on('change', function () {
            $(this).prev('input').val($(this).val());
        });

        $('#ApplicationVerificationBody:contains("exists"),#ApplicationVerificationBody:contains("required")').each(function () {
            $("#ApplicationVerificationBody").find("td").css({ "height": "64px" });
        });

        $('.sticky-col tbody tr input').remove();

        errorContainer.closest('tr').css("background-color", "#E84646");

        $('.validation-summary-errors').children('ul').children('li').hide();
        $('.validation-summary-errors').children('ul').children('li:contains("Duplicate entries")').show();

        ShowOnlyError('#ShowOnlyError');
        $('#ShowOnlyError').click(function () {
            AlertMessage(this);
            ShowOnlyError(this);
        });

        $('#Deadline').datepicker();

        @if (ViewBag.Validate != null && ViewBag.Validate)
            {
                @:$('form').valid();
                                            }

    });
    function ShowOnlyError(selector) {
        if ($(selector).is(':checked')) {
            var errorCount = errorContainer.length;
            if (errorCount > 0) {
                $('#ApplicationVerificationBody').children('tr').hide();
                errorContainer.closest('tr').show();
            } else {
                $('#ApplicationVerificationBody').children('tr').show();
                $(selector).prop('checked', false);
            }
        } else {
            $('#ApplicationVerificationBody').children('tr').show();
        }
    }
    function AlertMessage(selector) {
        if ($(selector).is(':checked')) {
            var errorCount = errorContainer.length;
            if (errorCount <= 0) {
                alert('No error found.')
            }
        }
    }
    </script>
}