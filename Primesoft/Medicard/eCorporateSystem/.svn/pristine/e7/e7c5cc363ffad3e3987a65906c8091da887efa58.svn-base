@model AccountOfficerViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Guid)
    
    <div class="form-horizontal">
        <h4>AccountOfficer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                <input type="button" class="btn" id="btnValidateCode" value="Validate Code" />
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleInitial, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleInitial, new { htmlAttributes = new { @class = "form-control disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.MiddleInitial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control disabled", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control disabled", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control disabled", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" id="btnSubmit" disabled="disabled" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $('#btnValidateCode').click(function (sender) {
                var code = $('#Code').val();
                var options = {
                    url: '@Url.Action("ValidateAccountOfficerCode")',
                    data: { code: code },
                    type: 'GET',
                    success: function (legacyAgent) {
                        if (legacyAgent) {
                            $('#FirstName').val(legacyAgent.FirstName);
                            $('#MiddleInitial').val(legacyAgent.MiddleInitial);
                            $('#LastName').val(legacyAgent.LastName);
                            $('#EmailAddress').val(legacyAgent.Email);
                            $('#UserName').removeAttr('disabled');
                            $('#Password').removeAttr('disabled');
                            $('#ConfirmPassword').removeAttr('disabled');
                            $('#btnSubmit').removeAttr('disabled');

                            var defaultUsername = legacyAgent.FirstName.substring(0, 1).toLowerCase();
                            defaultUsername += legacyAgent.LastName.toLowerCase();
                            $('#UserName').val(defaultUsername);
                        }
                        else {
                            $('#FirstName').val('');
                            $('#MiddleInitial').val('');
                            $('#LastName').val('');
                            $('#EmailAddress').val('');
                            $('#UserName').val('');
                            $('#Password').val('');
                            $('#ConfirmPassword').val('');
                            if (!$('#UserName').attr('disabled')) {
                                $('#UserName').attr('disabled', 'disabled')
                            }
                            if (!$('#Password').attr('disabled')) {
                                $('#Password').attr('disabled', 'disabled')
                            }
                            if (!$('#ConfirmPassword').attr('disabled')) {
                                $('#ConfirmPassword').attr('disabled', 'disabled')
                            }
                            if (!$('#btnSubmit').attr('disabled')) {
                                $('#btnSubmit').attr('disabled', 'disabled')
                            }
                            alert('Agent not found. Invalid Code.')
                        }
                    }
                };

                $.ajax(options);
            });
        });
    </script>
}
