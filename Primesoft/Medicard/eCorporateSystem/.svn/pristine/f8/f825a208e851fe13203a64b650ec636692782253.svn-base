@model Corelib.Models.Amendment

@{
    ViewBag.Title = "Amendment";
    Layout = "~/Areas/CorporateAdministrator/Views/Shared/_AccountManagerLayout.cshtml";
}

<div class="row">
    <div class="col-lg-12 col-centered">
        <div id="panel-title">Amendment Detail</div>
        <div class="panel panel-default">
            <div class="panel-body">
                <div id="panel-container">
                    <div class="form-horizontal">
                        <div class="row">
                            <div class="col-lg-12">
                                <div id="PersonalDetails">
                                    <div class="row form-padding">
                                        <div class="col-lg-12">
                                            @using (Html.BeginForm("Amendment", "Amendments", FormMethod.Post, new { accountCode = ViewBag.AccountCode, enctype = "multipart/form-data" }))
                                            {
                                                @Html.ValidationSummary(true);
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" id="IsReadOnly" value="@ViewBag.DestroyPicker">

                                                @Html.Partial("_Amendment", Model)

                                                <div class="row space">
                                                    <div class="col-lg-12">
                                                        <div class="space no-color pull-right">
                                                            @if (User.IsInRole("SysAd") || (!(bool)ViewBag.IsReadOnlyUser && (User.IsInRole("CanAddAmendments") || User.IsInRole("CanEditAmendments"))))
                                                            {
                                                                if (Model.Status == Corelib.Enums.RequestStatus.Submitted)
                                                                {
                                                                    <input type="submit" name="Submit" value="Save" class="btn btn-primary" />
                                                                    <input type="submit" name="Submit" value="Submit Request" class="btn btn-primary" />
                                                                    if (Model.Id != 0)
                                                                    {
                                                                        @Html.ActionLink("Cancel", "CancelAmendment", new { accountCode = ViewBag.AccountCode, guid = Model.Guid }, new { @class = "btn btn-danger" })
                                                                    }
                                                                }
                                                            }
                                                            @Html.ActionLink("Back to List", "Index", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Html.Partial("_Message")

    <script type="text/javascript">

        $(document).ready(function () {
            //$('#MemberCode').combobox();
            $('#MemberContainer').attr("style", "margin-bottom:14px");
            var isReadOnly = $('#IsReadOnly').val();
            if (isReadOnly == "True") {
                $('#EffectivityDate,#ChangeDataTo').datepicker("destroy");
                $('#FileWrapper').prop('disabled', true);
                $('#ClearFile').prop('disabled', true);
                $('#ClearExistingFile').prop('disabled', true);
            } else {
                $('#EffectivityDate').datepicker();
            }
            CheckRequestFor();

            $('#@Html.IdFor(t => t.MemberCode)').select2({
                placeholder: "Search for a Active Member",
                minimumInputLength: 1,
                ajax: {
                    url: '@Url.Action("GetActiveMembers")',
                    dataType: 'json',
                    data: function (term, page) {
                        return {
                            q: term, // search term
                            accountCode:'@Model.AccountCode',
                            page_limit: 10
                        };
                    },
                    results: function (data, page) { // parse the results into the format expected by Select2.
                        // since we are using custom formatting functions we do not need to alter remote JSON data
                        return { results: data };
                    }
                }
            });

            $('#@Html.IdFor(t => t.MemberCode)').on('select2-selecting', function (e) {
                $('#@Html.IdFor(t => t.MemberName)').val(e.choice.text);
            });

            $('#@Html.IdFor(t => t.DependentCode)').on('change', function (e) {
                var optionSelected = $("option:selected", this).text();
                $('#@Html.IdFor(t => t.DependentName)').val(optionSelected);
            });

            $("#@Html.IdFor(t => t.MemberCode)").select2('data', { id: '@Model.MemberCode', text: '@Model.MemberName' });

        });

        function CheckRequestFor() {
            if ($('#RequestFor').val() == '0') {
                $('#DependentCode').val('');
                $('#DependentCode').attr('disabled', 'disabled');
            }
            else {
                $('#DependentCode').removeAttr('disabled');
            }
        }

        function dataTypeOnchange(input) {
            dataTypeSelect(input);
        }

        function onChangeMember(input) {
            $('#DependentCode').val('');
            $('#ChangeDataFrom').val('');
            $('#ChangeDataTo').val('');
            $('#RequestFor').val('0');
            $('#DataType').val('');

            dependentSelect(input);
            dataTypeSelect($('#DataType'));
            onChangeRequestFor($('#RequestFor'));
        }

        function onChangeDependent() {
            if ($('#RequestFor').val() == '1' && $('#DataType').val() != '') {
                $('#ChangeDataFrom').val('');
                dataTypeSelect($('#DataType'));
            }
        }

        function onChangeRequestFor(input) {
            $('#DataType').val('');
            forRequestSelect(input);
            dataTypeSelect($('#DataType'));
            CheckRequestFor();
        }

        function dependentSelect(input) {
            var option = {
                url: '@Url.Action("GetDependents")',
                type: 'post',
                data: {
                    memberCode: input.val(),
                    accountCode: '@Model.AccountCode'
                }
            };
            $.ajax(option).done(function (data) {
                $('#DependentCode').html(data);
            });
        }
        function forRequestSelect(input) {
            var option = {
                url: '@Url.Action("GetDataType")',
                type: 'post',
                data: {
                    requestForId: input.val()
                }
            };
            $.ajax(option).done(function (data) {
                $('#DataType').html(data);
            });
        }

        function dataTypeSelect(input) {
            var propertyName = input.val();
            var memberCode = $('#MemberCode').val();
            var requestForId = $('#RequestFor').val();
            var dependentCode = $('#DependentCode').val();
            var option = {
                url: '@Url.Action("GetPropertyValue")',
                type: 'post',
                data: {
                    propertyName: propertyName,
                    memberCode: memberCode,
                    requestForId: requestForId,
                    dependentCode: dependentCode,
                    accountCode: '@Model.AccountCode'
                }
            };
            $.ajax(option).done(function (data) {
                $('#ChangeDataFrom').val(data);
            });

            var options = {
                url: '@Url.Action("PropertyTool")',
                type: 'post',
                data: {
                    propertyName: propertyName,
                    memberCode: memberCode,
                    accountCode: '@Model.AccountCode',
                    dependentCode: dependentCode,
                    requestForId: requestForId
                },
                success: function (data) {
                    var json = data;
                    $("#DataToContainer").empty();
                    $("#DataToContainer").html(json.DataTool);
                    if (json.Success) {
                        if (json.Tool == "DatePicker") {
                            $("#ChangeDataTo").datepicker();
                        }
                    }
                }
            }
            $.ajax(options);
        }
        function clearFileInput() {
            var oldInput = document.getElementById("FileWrapper");
            var newInput = document.createElement("input");
            newInput.type = "file";
            newInput.id = oldInput.id;
            newInput.name = oldInput.name;
            newInput.className = oldInput.className;
            newInput.style.cssText = oldInput.style.cssText;
            // copy any other relevant attributes

            oldInput.parentNode.replaceChild(newInput, oldInput);
        }
        function clearExistingFileInput(input) {
            input.siblings('a').remove();
            input.siblings('label[for="NoFile"]').remove();
            input.siblings('label[for="CurrentUploaded"]').after('<label for="NoFile">&nbsp;Existing file deleted.<label>');
            $('#DocumentContentType').val('');
            $('#DocumentFile').val('');
            $('#DocumentFileName').val('');
        }
    </script>
}