@model EndorsementBatch

@{
    ViewBag.Title = "Batch Upload";
    Layout = "~/Areas/CorporateAdministrator/Views/Shared/_AccountManagerLayout.cshtml";
}

@using (Html.BeginForm("BatchUpload", "Endorsement", new { accountCode = ViewBag.AccountCode }))
{
    @Html.ValidationSummary(true);
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id);
    @Html.HiddenFor(model => model.Guid);
    @Html.HiddenFor(model => model.ReferenceNumber);
    @Html.HiddenFor(model => model.Filename);
    @Html.HiddenFor(model => model.GuidFilename);
    @Html.HiddenFor(model => model.Timestamp);
    @Html.HiddenFor(model => model.Status);
    <div class="row">
        <div class="col-lg-12 col-centered">
            <div id="panel-title">Membership Endorsement (Add New Member)</div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="panel-container">
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div id="BatchUploadNewApplication">
                                        <div class="row form-padding">
                                            <div class="col-lg-12">
                                                <h4 class="form-title" style="margin-bottom: 1em">Batch Upload for New Application</h4>
                                                <div class="row">
                                                    <div class="col-lg-8 form-group">
                                                        <label class="control-label col-lg-4">Submission Deadline:</label>
                                                        <div class="col-lg-8 editor-form-control">
                                                            @Html.EditorFor(model => model.Deadline, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                            @Html.ValidationMessage("DeadLineError", new { @class = "text-danger" })
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-8 form-group">
                                                        <label class="control-label col-lg-4">Remarks:</label>
                                                        <div class="col-lg-8">
                                                            @Html.TextAreaFor(model => model.Remarks, ViewBag.HtmlControlReadOnlyAttributes as object)
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-8 form-group">&nbsp;</div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="row">
                                                            <div class="col-lg-12">
                                                                @if (ViewBag.ReadOnly == null || !ViewBag.ReadOnly)
                                                                {
                                                                    <label class="inline">Allowed file extension: xlsx.</label>
                                                                }

                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="row">
                                                            <div class="col-lg-12">
                                                                <input id="downloadNewApplicationTemplateButton" type="button" class="btn-download" value="Download Template" />
                                                                @if (ViewBag.ReadOnly == null || !ViewBag.ReadOnly)
                                                                {
                                                                    <input type="file" id="uploadNewApplication" name="uploadNewApplication" style="background-color:blue" />
                                                                    <input type="hidden" id="uploadStringNewApplication" name="uploadStringNewApplication" />
                                                                }
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div id="RowsContainer">
                                                            @if (ViewBag.ViewData != null && ViewBag.ViewData)
                                                            {
                                                                @Html.Action("GetMemberWrappers", new { accountCode = ViewBag.AccountCode, guid = Model.Guid, errorOnly = Model.HasEndorsementError})
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {

    <script type="text/javascript">
        function deleteMember(button) {
            var tr = $(button).parent().parent();
            tr.remove();
        }

        $(document).ready(function () {
            $("#uploadNewApplication").uploadifive({
                'method': 'post',
                'formData': {
                    'accountCode': '@ViewBag.AccountCode',
                    'endorsementBatchId': '@Model.Id',
                    'endorsementBatchGuid': '@Model.Guid'
                },
                'uploadScript': '/CorporateAdministrator/Endorsement/UploadExcel',
                'fileObjName': 'fileData',
                'buttonText': 'Select File',
                'multi': false,
                'auto': true,
                'height': 40,
                'width': 60,
                'removeCompleted': true,
                'onError': function (file, data) {
                    alert(file);
                },
                'onUpload': function (file) {
                    $('#RowsContainer').html('<div id="fountainG"><div id="fountainG_1" class="fountainG"></div><div id="fountainG_2" class="fountainG"></div><div id="fountainG_3" class="fountainG"></div><div id="fountainG_4" class="fountainG"></div><div id="fountainG_5" class="fountainG"></div><div id="fountainG_6" class="fountainG"></div><div id="fountainG_7" class="fountainG"></div><div id="fountainG_8" class="fountainG"></div></div>');
                },
                'onUploadComplete': function (file, data) {
                    var json = $.parseJSON(data);

                    if (json.Success) {
                        $('#Filename').val(json.Filename);
                        $('#GuidFilename').val(json.GuidFilename);
                        $('#RowsContainer').html(json.TableData);
                        GetExcelRows(json.HasError);
                    }
                    else {
                        alert(json.ErrorMessage);
                    }
                }
            });

            $('#downloadNewApplicationTemplateButton').click(function (e) {
                e.preventDefault();
                window.location.href = '@(Url.Action("DownloadNewApplicationTemplate", new { @accountCode = ViewBag.AccountCode }))';
            });

            $('.selectpicker').each(function (index, select) {
                var value = $(select).attr('data-value');
                $(select).selectpicker();
                $(select).selectpicker('val', eval(value));
            });

            $('.selectpicker').on('change', function () {
                $(this).prev('input').val($(this).val());
            });

            $('#ApplicationVerificationBody:contains("exists"),#ApplicationVerificationBody:contains("required")').each(function () {
                $("#ApplicationVerificationBody").find("td").css({ "height": "64px" });
            });

            $('.sticky-col tbody tr input').remove();
            $('.table-error:contains("required"), .table-error:contains("Invalid Email"), .table-error:contains("already exists")').closest('tr').css("background-color", "#E84646");

            $('#Deadline').datepicker();

            $('#ShowOnlyError').click(function () {
                GetExcelRows($(this).is(":checked"));
            });
        });

        function AlertMessage(selector) {
            if ($(selector).is(':checked')) {
                var errorCount = $('.table-error:contains("required"), .table-error:contains("Invalid Email"), .table-error:contains("already exists")').length;
                if (errorCount <= 0) {
                    alert('No error found.')
                }
            }
        }

        function OnMemberWrapperBegin() {
            $('#RowsContainer').html('<div id="fountainG"><div id="fountainG_1" class="fountainG"></div><div id="fountainG_2" class="fountainG"></div><div id="fountainG_3" class="fountainG"></div><div id="fountainG_4" class="fountainG"></div><div id="fountainG_5" class="fountainG"></div><div id="fountainG_6" class="fountainG"></div><div id="fountainG_7" class="fountainG"></div><div id="fountainG_8" class="fountainG"></div></div>');
        }

        function GetExcelRows(errorOnly) {
            var options = {
                url: '@Url.Action("GetMemberWrappers")',
                type: 'POST',
                data: {
                    accountCode: '@ViewBag.AccountCode',
                    guid: '@Model.Guid',
                    errorOnly: errorOnly
                },
                success: function (html) {
                    $('#RowsContainer').html(html);
                    setStickyHeader();
                    $('#ShowOnlyError').click(function () {
                        GetExcelRows($(this).is(":checked"));
                    });
                }
            }

            $.ajax(options);
        }
    </script>
}