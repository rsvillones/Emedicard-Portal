@model PagedList.IPagedList<LegacyReimbursement>

<div id="MyReimbursementContainer">
    @if (Model.PageCount > 1)
    {
        @Html.PagedListPager(Model, page => Url.Action("GetMyReimbursement", "Items", new { page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(PagedListRenderOptions.ClassicPlusFirstAndLast, new AjaxOptions() { UpdateTargetId = "MyReimbursementContainer" }))
        <br /><br /><br />
    }

    <table class="table table-fixed-left">
        <thead>
            <tr>
                <th style="width:20%">
                    Control Code
                </th>
                <th style="width:20%">
                    Received Date
                </th>
                <th style="width:20%">
                    Due Date
                </th>
                <th style="width:20%">
                    Visit Date
                </th>
                <th style="width:17%">
                    Status
                </th>
                <th style="width: 3%;"></th>
            </tr>
        </thead>
    </table>

    <div class="scrollable-tables" style="margin-top: -3px !important;height: 230px !important;margin-bottom: 0 !important">
        <table class="table table-custom">
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td style="width:20%">
                                @Html.DisplayFor(model => item.ControlCode)
                            </td>
                            <td style="width:20%">
                                @Html.DisplayFor(model => item.ReceivedDate)
                            </td>
                            <td style="width:20%">
                                @Html.DisplayFor(model => item.DueDate)
                            </td>
                            <td style="width:20%">
                                @Html.DisplayFor(model => item.VisitDate)
                            </td>
                            <td style="width:17%">
                                @if (!string.IsNullOrEmpty(item.Status) && (item.Status.ToLower() != "processed/under evaluation" || item.Status.ToLower() != "unprocessed"))
                                {
                                    <a href="javascript:void(0);" onclick="PopUpDetails('@item.MemberCode', '@item.ControlCode','@item.Status'); return false;">@item.Status</a>
                                }
                                else
                                {
                                    @Html.DisplayFor(model => item.Status)
                                }
                            </td>
                            <td style="width:3%"></td>
                        </tr>
                    }
                }
                else
                {
                    @Html.Partial("_NoData", 7)
                }
            </tbody>
        </table>
    </div>
</div>

<div id="messageModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    function PopUpDetails(memberCode, controlCode, status) {
        var option = {
            url: '@Url.Action("GetReimbursementDetailModel", "Items", new { area = "" })',
            type: 'POST',
            data: {
                memberCode: memberCode,
                controlCode: controlCode,
                status: status
            }
        };
        $.ajax(option).done(function (data) {
            var title = "";
            status = status.toLowerCase();
            switch (status) {
                case "disapproved":
                    title = "Reason For Disapproval"
                    break;
                case "with lacking documents":
                    title = "Required Document(s)"
                    break;
                case "waiting for hospital bills":
                    title = "Waiting for Hospital Bills"
                    break;
                default:
                    title = "Reimbursement Details"
                    break;
            }

            $(".modal-body").html(data);
            $(".modal-title").html(title);
            $("#messageModal").modal('show');
        });
    }
</script>
