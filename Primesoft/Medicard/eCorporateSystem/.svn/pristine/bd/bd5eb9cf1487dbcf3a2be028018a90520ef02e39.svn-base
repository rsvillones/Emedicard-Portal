using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Corelib;
using Microsoft.Reporting.WebForms;

namespace WebUI.Reports.UtilizationReporting
{
    public partial class Reimbursement : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (IsPostBack) return;
            GenerateReport(sender, e);
        }

        protected void GenerateReport(object sender, EventArgs e)
        {
            using (var db = new UtilizationDataContext())
            {
                var serviceParam = new ReportParameter("ServiceParam", ServiceParameter(Request["service"]));
                var startDateParam = new ReportParameter("StartDate", UtilizationHelper.ParameterDateTime(StartDateText.Text).ToString("MM/dd/yyyy"));
                var endDateParam = new ReportParameter("EndDate", UtilizationHelper.ParameterDateTime(EndDateText.Text).ToString("MM/dd/yyyy"));
                var lastNameParam = new ReportParameter("LastName", LastNameText.Text);
                UtilizationReportReimbursementViewer.LocalReport.DataSources.Clear();
                UtilizationReportReimbursementViewer.LocalReport.ReportPath = Server.MapPath("~/Reports/UtilizationReporting/Reimbursement.rdlc");
                UtilizationReportReimbursementViewer.LocalReport.SetParameters(new ReportParameter[] { startDateParam, endDateParam, lastNameParam, serviceParam });
                UtilizationReportReimbursementViewer.LocalReport.DataSources.Add(new ReportDataSource("Reimbursement", UtilizationHelper.GetUtilizationReimbursements(db, Request["service"], Request["accountCode"], UtilizationHelper.ParameterDateTime(StartDateText.Text), UtilizationHelper.ParameterDateTime(EndDateText.Text), LastNameText.Text)));
            }
        }

        protected string ServiceParameter(string parameterValue)
        {
            switch (parameterValue)
            {
                case "IP":
                    return "Reimbursement In-Patient";
                case "OP":
                    return "Reimbursement Out-Patient";
            }
            return "No Service Selected";
        }

    }
}