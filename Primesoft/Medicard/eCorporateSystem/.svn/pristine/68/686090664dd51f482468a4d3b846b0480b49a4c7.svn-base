@{
    ViewBag.Title = "Excel Import";
}

<div class="row">
    <div class="col-lg-12">
        <fieldset>
            <legend>Upload New Applications</legend>
            <div class="row">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-12">
                            <label class="inline">Allowed file extension: xlsx.</label>
                            <input type="file" id="uploadNewApplication" name="uploadNewApplication" style="background-color:blue" />
                            <input type="hidden" id="uploadStringNewApplication" name="uploadStringNewApplication" />
                            <div id="ImportBodyNewApplication"></div>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <fieldset>
            <legend>Upload Renewal of Applications</legend>
            <div class="row">
                <div class="col-lg-12">
                    <div class="row">
                        <div class="col-lg-12">
                            <label class="inline">Allowed file extension: xlsx.</label>
                            <input type="file" id="uploadRenewalApplication" name="uploadRenewalApplication" style="background-color:blue" />
                            <input type="hidden" id="uploadStringRenewalApplication" name="uploadStringRenewalApplication" />
                            <div id="ImportBodyRenewalApplication"></div>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="row">
            <div class="col-lg-4">
                @Html.ActionLink("Back to List", "Index", null, new { @class = "" })
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script type="text/javascript">
    $("#uploadNewApplication").uploadifive({
        'method': 'post',
        'uploadScript': '/Application/UploadExcel',
        'fileObjName': 'fileData',
        'buttonText': 'Select',
        'multi': false,
        'auto': true,
        'height': 40,
        'width': 40,
        'removeCompleted': true,
        'onUploadComplete': function (file, data) {
            var uploadString = data;
            var type = 'New Application';
            $('#uploadStringNewApplication').val(uploadString);
            startThreading(data, type);
        }
    });

    $("#uploadRenewalApplication").uploadifive({
        'method': 'post',
        'uploadScript': '/Application/UploadExcel',
        'fileObjName': 'fileData',
        'buttonText': 'Select File',
        'multi': false,
        'auto': true,
        'height': 40,
        'width': 40,
        'removeCompleted': true,
        'onUploadComplete': function (file, data) {
            var uploadString = data;
            var type = 'Renewal';
            $('#uploadStringRenewalApplication').val(uploadString);
            startThreading(data, type);
        }
    });

    function startThreading(path, type) {
        var option = {
            url: '@Url.Action("StartThreading")',
            type: 'post',
            data: {
                filePath: path,
                applicationType: type
            }
        };
        $.ajax(option).done(function (htmlValue) {
            if (type == 'New Application') {
                $('#ImportBodyNewApplication').empty();
                excelValidation(path, type);
            }
            else {
                $('#ImportBodyRenewalApplication').empty();
                excelValidation(path, type);
            }

        });
    }

    function excelValidation(fileName, type) {
        var status;
        var isPaused = false;
        var interval = setInterval(function () {
            if (!isPaused) {
                var option = {
                    url: '@Url.Action("ExcelValidation")',
                    type: 'post',
                    data: {
                        fileName: fileName,
                        applicationType: type
                    }
                };
                isPaused = true;
                $.ajax(option).done(function (htmlValue) {
                    var status;
                    var statusType;
                    if (htmlValue.status == 1) {
                        status = "Completed";

                        statusType = "success";
                    } else {
                        status = "Loading";

                        statusType = "alert";
                    }

                    if (type == 'New Application') {
                        $('#ImportBodyNewApplication').empty();
                        $('#ImportBodyNewApplication').append('<div class="progressbar col-lg-12 ' + statusType + ' round"><span class="meter" style="width: ' + parseFloat(Math.round((htmlValue.rowCompleted / htmlValue.numberOfItems) * 100).toFixed(2)) + '%"></span></div>');
                        $('#ImportBodyNewApplication').append('<h5 class="subheader text-center">' + 'Validating Excel File ' + htmlValue.rowCompleted + ' out of ' + htmlValue.numberOfItems + ' items </h5>');

                    } else {
                        $('#ImportBodyRenewalApplication').empty();
                        $('#ImportBodyRenewalApplication').append('<div class="progressbar col-lg-12 ' + statusType + ' round"><span class="meter" style="width: ' + parseFloat(Math.round((htmlValue.rowCompleted / htmlValue.numberOfItems) * 100).toFixed(2)) + '%"></span></div>');
                        $('#ImportBodyRenewalApplication').append('<h5 class="subheader text-center">' + 'Validating Excel File ' + htmlValue.rowCompleted + ' out of ' + htmlValue.numberOfItems + ' items </h5>');

                    }
                    status = htmlValue.status;
                    isPaused = false;
                    if (status == 1) {
                        clearInterval(interval);
                        importComfirmation(fileName, type);
                    }
                });
            }
        }, 2000);
    }

    function importComfirmation(path, type) {
        var option = {
            url: '@Url.Action("ImportComfirmation")',
            type: 'post',
            data: {
                filePath: path,
                applicationType: type
            }
        };
        $.ajax(option).done(function (htmlValue) {
            if (type == 'New Application') {
                $('#ImportBodyNewApplication').empty();
                window.setTimeout(
                    function () {
                        $('#ImportBodyNewApplication').html(htmlValue); //happens 3 secs later\
                        showAllErrors($('#ShowAllError'), $('#ApplicationVerificationBody'));
                        $('#ShowAllError').click(function () {
                            showAllErrors($(this), $('#ApplicationVerificationBody'));
                        });
                    },
                    3000
                );
                $('#filePath').val(path);

            } else {
                $('#ImportBodyRenewalApplication').empty();
                window.setTimeout(
                    function () {
                        $('#ImportBodyRenewalApplication').html(htmlValue); //happens 3 secs later\
                        showAllErrors($('#ShowRenewalError'), $('#RenewalVerificationBody'));
                        $('#ShowRenewalError').click(function () {
                            showAllErrors($(this), $('#RenewalVerificationBody'));
                        });
                    },
                    3000
                );
                $('#filePath').val(path);
            }

        });
    }

    function showAllErrors(selector,body) {
        if (selector.is(':checked')) {
            body.children('tr').each(function () {
                $(this).hide();
            });
            $('.field-validation-error').closest('tr').show();
            $('.field-validation-error').closest('tr').attr('style', 'background-color:red;');
        } else {
            body.children('tr').each(function () {
                $(this).show();
            });
        }
    }

    function saveApplication() {
        var option = {
            type: "POST",
            url: '@Url.Action("UploadApplication")',
                traditional: true,
                data: $('#uploadNewApplication').serializeArray()
            };
            $.ajax(option).done(function (data) {
                $('#NewApplicationMainContent').empty();
                $('#NewApplicationMainContent').html(data);
                showAllErrors($('#ShowAllError'), $('#ApplicationVerificationBody'));
                $('#ShowAllError').click(function () {
                    showAllErrors($(this), $('#ApplicationVerificationBody'));
                });
            });
        }

        function saveRenewal() {
            var option = {
                type: "POST",
                url: '@Url.Action("UploadRenewal")',
                traditional: true,
                data: $('#uploadRenewal').serializeArray()
            };
            $.ajax(option).done(function (data) {
                $('#RenewalMainContent').empty();
                $('#RenewalMainContent').html(data);
                showAllErrors($('#ShowRenewalError'), $('#RenewalVerificationBody'));
                $('#ShowRenewalError').click(function () {
                    showAllErrors($(this), $('#RenewalVerificationBody'));
                });
            });
        }
    </script>
}