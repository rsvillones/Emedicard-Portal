@model PagedList.IPagedList<EndorsementBatch>

@{
    ViewBag.Title = "Membership Endorsements";
    Layout = "~/Areas/CorporateAdministrator/Views/Shared/_AccountManagerLayout.cshtml";
}

<div class="row">
    <div class="col-lg-6 pageList-margin">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        <p class="pager-padding" style="float: right">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </p>
    </div>
    <div class="col-lg-6">
        <div class="btn-group" style="float: right">
            <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown">
            Actions <span class="caret"></span>
            </button>
                <ul class="dropdown-menu right-dropdown" role="menu">
                    <li>@Html.ActionLink("Single Endorsement", "SingleEndorsement", new { accountCode = ViewBag.AccountCode })</li>
                    <li>@Html.ActionLink("Batch Upload", "BatchUpload", new { accountCode = ViewBag.AccountCode })</li>
                                    <li>@Html.ActionLink("Renewal", "Renewal", new { accountCode = ViewBag.AccountCode })</li>
                    <li class="divider"></li>
                    <li>@Html.ActionLink("Batch Cancellation", "BatchUploadCancellation", new { accountCode = ViewBag.AccountCode })</li>

                    <li>@Html.ActionLink("Single Cancellation", "CancelledMember", new { accountCode = ViewBag.AccountCode })</li>
                </ul>
        </div>
    </div>
</div>

<table class="table table-custom">
    <tr>
        <th>
            Date
        </th>
        <th>
            Filename
        </th>
        <th>
            Status
        </th>
        <th>
            Endorsement Type
        </th>
        <th>
            Deadline
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(model => item.Date)
            </td>
            <td>
                @Html.DisplayFor(model => item.Filename)
            </td>
            <td>
                @Html.DisplayFor(model => item.Status)
            </td>
            <td>
                @Html.DisplayFor(model => item.EndorsementType)
            </td>
            <td>
                @Html.DisplayFor(model => item.Deadline)
            </td>
            <td>
                @if (item.Status == Corelib.Enums.EndorsementBatchStatus.New){
                    switch (item.EndorsementType){
                        case "New":
                            switch (item.BatchType){
                                case "Single Endorsement":
                                    @Html.ActionLink("Process", "ProcessBatch", new { guid = item.Guid, accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    @Html.ActionLink("View Data", "SingleEndorsement", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                                case "Batch Upload":
                                    @Html.ActionLink("Process", "ProcessBatch", new { guid = item.Guid, accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    @Html.ActionLink("View Data", "BatchUpload", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                            }
                            break;
                        case "Renewal":
                            @Html.ActionLink("Process", "ProcessBatch", new { guid = item.Guid, accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary btn-xs btn-margin" })
                            @Html.ActionLink("View Data", "Renewal", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                            break;
                        case "Cancel Membership":
                            switch (item.BatchType){
                                case "Single Cancellation":
                                    @Html.ActionLink("Process", "ProcessCancellationBatch", new { guid = item.Guid, accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    @Html.ActionLink("View Data", "CancelledMember", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                                case "Batch Upload":
                                    @Html.ActionLink("Process", "ProcessCancellationBatch", new { guid = item.Guid, accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    @Html.ActionLink("View Data", "BatchUploadCancellation", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                            }
                            break;

                    }
                    @Html.ActionLink("Delete", "DeleteBatch", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-danger btn-xs btn-margin" })
                }
                else{
                    switch (item.EndorsementType){
                        case "New":
                            switch (item.BatchType){
                                case "Single Endorsement":
                                    @Html.ActionLink("View Data", "SingleEndorsement", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                                case "Batch Upload":
                                @Html.ActionLink("View Data", "BatchUpload", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                            }
                            break;
                        case "Renewal":
                            @Html.ActionLink("View Data", "Renewal", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                            break;
                        case "Cancel Membership":
                            switch (item.BatchType){
                                case "Single Cancellation":
                                    @Html.ActionLink("View Data", "CancelledMember", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                                case "Batch Upload":
                                @Html.ActionLink("View Data", "BatchUploadCancellation", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                                    break;
                            }
                            break;
                    }
                }
            </td>
        </tr>
    }
</table>

@section Scripts{
    @Html.Partial("_Message")
    <script type="text/javascript">
        $(document).ready(function () {
            if (window.location.href.indexOf("name_desc") > -1) {
                $('.sort-table').find('i').toggleClass('glyphicon-chevron-down').toggleClass('glyphicon-chevron-up');
            }
        });
    </script>
}


