@model PagedList.IPagedList<DependentCancellation>

@{
    ViewBag.Title = "Cancellation of Dependent Membership";
    Layout = "~/Areas/CorporateAdministrator/Views/Shared/_AccountManagerLayout.cshtml";
    var dependentCancellation = new DependentCancellation();
    IEnumerable<Dependent> dependents = ViewBag.Dependents;
    IEnumerable<Member> members = ViewBag.Members;
}

<div class="row">
    <div class="col-lg-8">
        <h2 class="title">Cancellation of Dependent Membership</h2>
    </div>
    @using (Html.BeginForm("Index", "DependentCancellations", FormMethod.Get, new { accountCode = ViewBag.AccountCode }))
    {
        <div class="col-lg-4">
            <div class="input-group">
                <input type="text" value="@ViewBag.SearchValue" readonly="readonly" id="click" class="form-control space-cr search-filter" placeholder="Search & Filter">
                <div class="input-group-btn">
                    <button type="button" class="dropdown-toggle btn-dd btn-default" data-toggle="dropdown" tabindex="-1">
                        <span class="caret"></span>
                        <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="rightMenu dropdown-menu">
                        <div class="row">
                            <div class="col-sm-12">
                                <div class="row"><div class="col-sm-11 col-centered"><h4 class="form-title ">Search & Filter</h4></div></div>
                                <div class="form-group">
                                    <label class="control-label col-lg-12">Request Date:</label>
                                    <div class="col-lg-12">
                                        <input type="text" value="@ViewBag.RequestDate" name="requestDate" onclick="return false;" class="form-control input-sm" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-lg-12">Member Name:</label>
                                    <div class="col-lg-12">
                                        <input type="text" value="@ViewBag.MemberName" name="memberName" onclick="return false;" class="form-control input-sm" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-lg-12">Dependent Name:</label>
                                    <div class="col-lg-12">
                                        <input type="text" value="@ViewBag.DependentName" name="dependentName" onclick="return false;" class="form-control input-sm" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label class="control-label col-lg-12">Request Reason:</label>
                                    <div class="col-lg-12">
                                        <input type="text" value="@ViewBag.RequestReason" name="requestReason" onclick="return false;" class="form-control last-input" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <button type="submit" class="btn btn-primary btn-grp btn-search"
                        tabindex="-1">
                    Search
                </button>
            </div>

        </div>
    }
</div>

<div class="row">
    <div class="col-lg-6 pageList-margin">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
        <p class="pager-padding" style="float: right">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </p>
    </div>
    <div class="col-lg-6">
        <p style="float: right">
            @Html.ActionLink("Add", "Create", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })

        </p>
    </div>
</div>
<table class="table table-custom">
    <tr>
        <th>
            @Html.DisplayNameFor(modelItem => dependentCancellation.RequestDate)
        </th>
        @*<th>
            @Html.DisplayNameFor(modelItem => dependentCancellation.RequestEffectivityDate)
        </th>*@
        <th>
            Member Name
        </th>
        <th>
            Dependent Name
        </th>
        <th>
            Reason
        </th>
        <th>
            Request Status
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        var member = members.FirstOrDefault(t => t.Id == item.MemberId);
        var dependentName = item.DependentId != null ? dependents.FirstOrDefault(t => t.Id == item.DependentId).FullName : "";
        <tr>
            <td>
                @Html.DisplayFor(model => item.RequestDate)
            </td>
            @*<td>
                @Html.DisplayFor(model => item.RequestEffectivityDate)
            </td>*@
            <td>
                @Html.DisplayFor(model => member.FullName)
            </td>
            <td>
                @Html.DisplayFor(model => dependentName)
            </td>
            <td>
                @Html.DisplayFor(model => item.Reason.Description)
            </td>
            <td>
                @Html.DisplayFor(model => item.Status)
            </td>
            <td>
                @if (item.Status == Corelib.Enums.RequestStatus.CorporateAdminApproved || item.Status == Corelib.Enums.RequestStatus.CorporateAdminDisapproved || item.Status == Corelib.Enums.RequestStatus.CancelledRequest)
                {
                    @Html.ActionLink("View Data", "Edit", new { accountCode = ViewBag.AccountCode, guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                }
                @if (item.Status == Corelib.Enums.RequestStatus.Submitted)
                {
                    @Html.ActionLink("Approve", "ApproveDependentCancellation", new { guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                    @Html.ActionLink("Disapprove", "DisapproveDependentCancellation", new { guid = item.Guid }, new { @class = "btn btn-danger btn-xs btn-margin" })
                    @Html.ActionLink("View Data", "Edit", new { guid = item.Guid }, new { @class = "btn btn-primary btn-xs btn-margin" })
                    @Html.ActionLink("Cancel", "CancelDependentCancellation", new { guid = item.Guid }, new { @class = "btn btn-danger btn-xs btn-margin" })
                }
            </td>
        </tr>
    }
</table>

@section Scripts{
    @Html.Partial("_Message")
    <script type="text/javascript">
        $(document).ready(function () {
            if (window.location.href.indexOf("name_desc") > -1) {
                $('.sort-table').find('i').toggleClass('glyphicon-chevron-down').toggleClass('glyphicon-chevron-up');
            }
            $('input[name="requestDate"]').datepicker();
            $(function () {
                $('.dropdown-menu input , .dropdown-menu select').click(function (event) {
                    event.stopPropagation();
                });
            });
            $(function () {
                //$(".dropdown-toggle").dropdown('toggle'); // this works
                $('#click').click(function (e) {
                    e.stopPropagation();
                    $(".dropdown-toggle").dropdown('toggle');// this doesn't
                });
            });
        });
    </script>
}


