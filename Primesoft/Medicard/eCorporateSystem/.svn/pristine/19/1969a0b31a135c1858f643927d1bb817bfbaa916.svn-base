@using HtmlHelpers.BeginCollectionItem
@model Corelib.Models.Member
@{
    var genderList = new SelectList(ViewBag.Genders, Model.Gender);
    var civilStatusList = new SelectList(ViewBag.CivilStatuses, Model.CivilStatus);
    var appliedPlanList = new SelectList(ViewBag.PrincipalPlans, "Id", "LongDescription", Model.AppliedPlan);
    var optionalPlanList = new SelectList(ViewBag.PrincipalPlans, "Id", "LongDescription");
    var dependentAppliedPlanList = new SelectList(ViewBag.DependentPlans, "Id", "LongDescription", Model.DependentAppliedPlan);
    var dependentOptionalPlanList = new SelectList(ViewBag.DependentPlans, "Id", "LongDescription");
}
@using (Html.BeginCollectionItem("Members"))
{
    @Html.HiddenFor(model => model.Id);
    @Html.HiddenFor(model => model.Guid);
    @Html.HiddenFor(model => model.Timestamp);
    @Html.HiddenFor(model => model.UserId);
    @Html.HiddenFor(model => model.UserName);
    @Html.HiddenFor(model => model.EndorsementBatchId);
    @Html.HiddenFor(model => model.AccountCode);
    @Html.HiddenFor(model => model.EndorsementType);    

    <div class="row">
        <div class="col-lg-12 col-centered">
            <div id="panel-title">Member Profile</div>
            <div class="panel panel-default">
                <div class="panel-body">
                    <div id="panel-container">
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div id="PersonalDetails">
                                        <div class="row form-padding">
                                            <div class="col-lg-12">
                                                <h4 class="form-title">Member Details</h4>
                                                <div class="row">
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.EmployeeNumber)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.EmployeeNumber, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.EmployeeNumber)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.EffectivityDate)</label>
                                                            <div class="col-lg-4">
                                                                @Html.TextBox("EffectivityDate", Model.EffectivityDate.HasValue && Model.EffectivityDate.Value != DateTime.MinValue ? ((DateTime?)Model.EffectivityDate).Value.ToString("MM/dd/yyyy") : null, ViewBag.HtmlControlReadOnlyAttributes as object)
                                                                @Html.ValidationMessageFor(model => model.EffectivityDate)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2 required">@Html.LabelFor(model => model.LastName)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.LastName)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.ValidityDate)</label>
                                                            <div class="col-lg-4">
                                                                @Html.TextBox("ValidityDate", Model.ValidityDate.HasValue && Model.ValidityDate.Value != DateTime.MinValue ? ((DateTime?)Model.ValidityDate).Value.ToString("MM/dd/yyyy") : null, ViewBag.HtmlControlReadOnlyAttributes as object)
                                                                @Html.ValidationMessageFor(model => model.ValidityDate)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2 required">@Html.LabelFor(model => model.FirstName)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.FirstName)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.DateHired)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.DateHired, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.DateHired)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.MiddleName)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.MiddleName)
                                                            </div>
                                                            <label class="control-label col-lg-2 required">@Html.LabelFor(model => model.Gender)</label>
                                                            <div class="col-lg-4">
                                                                @Html.DropDownList("Gender", genderList, "Please select Gender", ViewBag.HtmlDropDownAttributes as object)
                                                                @Html.ValidationMessageFor(model => model.Gender)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.Suffix)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.Suffix, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.Suffix)
                                                            </div>
                                                            <label class="control-label col-lg-2 required">@Html.LabelFor(model => model.CivilStatus)</label>
                                                            <div class="col-lg-4">
                                                                @Html.DropDownList("CivilStatus", civilStatusList, "Please select Civil Status", ViewBag.HtmlDropDownAttributes as object)
                                                                @Html.ValidationMessageFor(model => model.CivilStatus)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.Dependent)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.DependentStringValue, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.Dependent)
                                                            </div>
                                                            <label class="control-label col-lg-2 ">@Html.LabelFor(model => model.Area)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.Area, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.Area)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.AppliedPlan)</label>
                                                            <div class="col-lg-4">
                                                                @Html.DropDownList("AppliedPlan", appliedPlanList, "Please select Plan", ViewBag.HtmlDropDownAttributes as object)
                                                                @Html.ValidationMessageFor(model => model.AppliedPlan)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.DependentAppliedPlan)</label>
                                                            <div class="col-lg-4">
                                                                @Html.DropDownList("DependentAppliedPlan", dependentAppliedPlanList, "Please select Plan", ViewBag.HtmlDropDownAttributes as object)
                                                                @Html.ValidationMessageFor(model => model.DependentAppliedPlan)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.OptionalPlan)</label>
                                                            <div class="col-lg-4">
                                                                @if (!ViewBag.ReadOnly)
                                                                {
                                                                    @Html.HiddenFor(model => model.AllowedPlans)
                                                                    @Html.DropDownList("OptionalPlanList", (IEnumerable<SelectListItem>)optionalPlanList, new { @class = ".optionalplan selectpicker span2 form-control", @multiple = "", @data_selected_text_format = "count>0", @data_value = "[" + Model.AllowedPlans + "]" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.HiddenFor(model => model.AllowedPlans)
                                                                    @Html.DropDownList("OptionalPlanList", (IEnumerable<SelectListItem>)optionalPlanList, new { @class = ".optionalplan selectpicker span2 form-control white-readonly", @multiple = "", @data_selected_text_format = "count>0", @data_value = "[" + Model.AllowedPlans + "]", @disabled = true })
                                                                }

                                                                @Html.ValidationMessageFor(model => model.AllowedPlans)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.DependentOptionalPlan)</label>
                                                            <div class="col-lg-4">
                                                                @if (!ViewBag.ReadOnly)
                                                                {
                                                                    @Html.HiddenFor(model => model.AllowedDependentPlans)
                                                                    @Html.DropDownList("DependentOptionalPlanList", (IEnumerable<SelectListItem>)dependentOptionalPlanList, new { @class = ".optionalplan selectpicker span2 form-control", @multiple = "", @data_selected_text_format = "count>0", @data_value = "[" + Model.AllowedDependentPlans + "]" })
                                                                }
                                                                else
                                                                {
                                                                    @Html.HiddenFor(model => model.AllowedDependentPlans)
                                                                    @Html.DropDownList("DependentOptionalPlanList", (IEnumerable<SelectListItem>)dependentOptionalPlanList, new { @class = ".optionalplan selectpicker span2 form-control white-readonly", @multiple = "", @data_selected_text_format = "count>0", @data_value = "[" + Model.AllowedDependentPlans + "]", @disabled = true })
                                                                }
                                                                @Html.ValidationMessageFor(model => model.AllowedDependentPlans)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2 required">@Html.LabelFor(model => model.DateOfBirth)</label>
                                                            <div class="col-lg-4">
                                                                @Html.TextBox("DateOfBirth", Model.DateOfBirth != DateTime.MinValue ? ((DateTime?)Model.DateOfBirth).Value.ToString("MM/dd/yyyy") : null, ViewBag.HtmlControlReadOnlyAttributes as object)
                                                                @Html.ValidationMessageFor(model => model.DateOfBirth)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.Age)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                                                @Html.ValidationMessageFor(model => model.Age)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.CostCenter)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.CostCenter, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.CostCenter)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.EmailAddress)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.EmailAddress)
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-lg-12">
                                                        <div class="form-group">
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.Designation)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.Designation, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.Designation)
                                                            </div>
                                                            <label class="control-label col-lg-2">@Html.LabelFor(model => model.Level)</label>
                                                            <div class="col-lg-4">
                                                                @Html.EditorFor(model => model.Level, new { htmlAttributes = ViewBag.HtmlControlReadOnlyAttributes })
                                                                @Html.ValidationMessageFor(model => model.Level)
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="row space">
                                                    <div class="col-lg-12">
                                                        <div class="no-color pull-right">
                                                            @if (ViewBag.ReadOnly == null || !ViewBag.ReadOnly)
                                                            {
                                                                <input type="submit" name="Submit" value="Save" class="btn btn-primary" />
                                                                <input type="submit" value="Save and Process" name="submit" class="btn btn-primary" />
                                                            }
                                                            @Html.ActionLink("Back to List", "Index", new { accountCode = ViewBag.AccountCode }, new { @class = "btn btn-primary" })
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
