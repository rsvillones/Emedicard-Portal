using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Corelib;
using Microsoft.Reporting.WebForms;

namespace WebUI.Reports.UtilizationReporting
{
    public partial class MemberAllService : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (IsPostBack) return;
            FillDropdown();
            if (MemberCodeDropDown.Items.Count <= 0) return;
            GenerateReport(sender, e);
        }

        protected void GenerateReport(object sender, EventArgs e)
        {
            using (var db = new UtilizationDataContext())
            {
                var memberCodeParam = new ReportParameter("MemberCode", MemberCodeDropDown.SelectedValue);
                var memberFullNameParam = new ReportParameter("MemberName", GetFullName(MemberCodeDropDown.SelectedValue,Request["accountCode"]));
                UtilizationReportMemberAllServiceViewer.LocalReport.DataSources.Clear();
                UtilizationReportMemberAllServiceViewer.LocalReport.ReportPath = Server.MapPath("~/Reports/UtilizationReporting/MemberAllService.rdlc");
                UtilizationReportMemberAllServiceViewer.LocalReport.SetParameters(new ReportParameter[] { memberCodeParam, memberFullNameParam });
                UtilizationReportMemberAllServiceViewer.LocalReport.DataSources.Add(new ReportDataSource("MemberAllService", UtilizationHelper.GetUtilizationMemberAllServices(db,MemberCodeDropDown.SelectedValue)));
            }
        }
        protected void FillDropdown()
        {
            using (var db = new LegacyDataContext())
            {
                var activeMembers = LegacyHelper.GetActiveMembers(db,Request["accountCode"]);
                var memberCodeExceptions = UtilizationHelper.GetMemberCodeExceptions(Request["accountCode"]);
                activeMembers = activeMembers.Where(t => !memberCodeExceptions.Contains(t.Code));
                MemberCodeDropDown.DataSource = activeMembers;
                MemberCodeDropDown.DataValueField = "Code";
                MemberCodeDropDown.DataTextField = "FullName";
                MemberCodeDropDown.DataBind();
            }
        }
        protected string GetFullName(string MemberCode,string accountCode)
        {
            using (var db = new LegacyDataContext())
            {
                var activeMember = LegacyHelper.GetActiveMembers(db, accountCode).FirstOrDefault(t => t.Code == MemberCode);
                return activeMember != null ? activeMember.FullName : "";
            }
        }
    }
}