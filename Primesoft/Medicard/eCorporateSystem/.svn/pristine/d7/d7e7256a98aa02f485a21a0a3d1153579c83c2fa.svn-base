using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Corelib.Models
{
    public class CorporateAdmin : BaseModel, IValidatableObject
    {
        #region -- Constructor --

        public CorporateAdmin()
        {
            this.Accounts = new Collection<Account>();
        }

        #endregion

        #region -- Properties --

        [Required]
        [StringLength(150)]
        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        [StringLength(3)]
        [Display(Name = "Middle Initial")]
        public string MiddleInitial { get; set; }

        [StringLength(30)]
        [Required]
        [Display(Name = "Last Name")]
        public string LastName { get; set; }

        [StringLength(150)]
        [DataType(DataType.EmailAddress)]
        [Required]
        [Display(Name = "Email Address")]
        public string EmailAddress { get; set; }

        [StringLength(20)]
        [Display(Name = "Phone")]
        public string Phone { get; set; }

        [StringLength(64)]
        public string UserId { get; set; }

        [StringLength(64)]
        public string UserName { get; set; }

        public ICollection<Account> Accounts { get; set; }

        #endregion

        #region -- IValidatableObject Members --

        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            using (var db = new IdentityDataContext())
            {
                if (db.Users.Any(t => t.UserName == this.UserName && t.Id != this.UserId))
                {
                    yield return new ValidationResult("Username is already registered in the database.", new string[] { "UserName" });
                }
            }
        }

        #endregion
    }
}
