Imports emedicardBLL
Imports System.IO

Public Class RequestDetials
    Inherits System.Web.UI.Page
    Dim key As String = ConfigurationManager.AppSettings("encryptionKey")
    Dim dtRequest As DataTable

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        If Not IsPostBack Then
            buttonDisabler()
            Dim bActive As Boolean = True
            Using bll = New eCorporateBLL
                bll.record_id = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("dtl"), key)
                bActive = bll.GetTransactionStatus
                If bActive Then
                    btnUpload.Enabled = False
                End If
            End Using
            GetAllRequestList()
        End If
    End Sub

    Private Sub GetAllRequestList()
        'GetCorporateRequestListAll
        Try
            Using bll = New eCorporateBLL
                If Request.QueryString("t") = "1" Then
                    bll.UserType = 1
                ElseIf Request.QueryString("t") = "2" Then
                    bll.UserType = 2
                Else
                    Exit Sub
                End If
                bll.AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
                bll.record_id = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("dtl"), key)
                dtRequest = bll.GetRequestDetail
                RepDetails.DataSource = dtRequest
                RepDetails.DataBind()

                bll.UpdateRequestViews()
            End Using
        Catch ex As Exception

        End Try
    End Sub

    Private Sub buttonDisabler()
        'SOLUTION 2: CHANGE THE BUTTON SUBMIT JS CODE SO THAT IT

        'DISABLES WHEN THE FORM IS VALID, PRIOR TO SUBMISSION

        'build the JS

        Dim sb As New StringBuilder()

        sb.Append("if (typeof(Page_ClientValidate) == 'function') { ")

        'if client-side does not validate, stop (this supports validation groups)

        'BUGFIX: must save, then restore the page validation / submission state, otherwise

        'when the validation fails, it prevents the FIRST autopostback from other controls

        sb.Append("var oldPage_IsValid = Page_IsValid; var oldPage_BlockSubmit = Page_BlockSubmit;")

        sb.Append("if (Page_ClientValidate('" + btnUpload.ValidationGroup & "') == false) {")

        sb.Append(" Page_IsValid = oldPage_IsValid; Page_BlockSubmit = oldPage_BlockSubmit; return false; }} ")

        'change button text and disable it

        sb.Append("this.value = 'Processing...';")

        sb.Append("this.disabled = true;")

        'insert the call to the framework JS code that does the postback of the form in the client

        'The default code generated by ASP (WebForm_DoPostbackWithOptions) will not

        'submit because the button is disabled (this is new in 2.0)

        sb.Append(ClientScript.GetPostBackEventReference(btnUpload, Nothing) & ";")

        'BUGFIX: MUST RETURN AFTER THIS, OTHERWISE IF THE BUTTON HAS UseSubmitBehavior=false

        'THEN ONE CLICK WILL IN FACT CAUSE 2 SUBMITS, DEFEATING THE WHOLE PURPOSE

        sb.Append("return true;")

        Dim submit_button_onclick_js As String = sb.ToString()

        btnUpload.Attributes.Add("onclick", submit_button_onclick_js)

    End Sub

    Protected Sub RepDetails_ItemCommand(ByVal source As Object, ByVal e As System.Web.UI.WebControls.RepeaterCommandEventArgs) Handles RepDetails.ItemCommand
        If e.CommandName = "Download" Then
            Dim iIndex As Integer = e.Item.ItemIndex
            Dim srecid As String = String.Empty
            For Each ctr In e.Item.Controls
                If TypeOf (ctr) Is HiddenField Then
                    Dim hdn As New HiddenField
                    hdn = ctr
                    srecid = hdn.Value
                End If
            Next

            Dim dtRec As New DataTable
            Using bll = New eCorporateBLL

                bll.AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
                bll.record_id = srecid
                dtRec = bll.GetRequestDetail

                Dim sFilename As String = String.Empty

                sFilename = dtRec(0)(2)

                If Trim(sFilename) <> "" Then

                End If
                Response.Clear()

                Response.ClearContent()
                Response.ClearHeaders()
                Response.BufferOutput = True

                Response.AddHeader("Content-Disposition", "attachment; filename=" + sFilename)
                Response.ContentType = "application/octet-stream"
                'Response.WriteFile("F:\ECorporateFileUpload\" & sFilename)
                Response.WriteFile(ConfigurationManager.AppSettings("UploadDir") & sFilename)
                Response.End()
                HttpContext.Current.ApplicationInstance.CompleteRequest()
            End Using
        End If

    End Sub

    Protected Sub RepDetails_ItemDataBound(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.RepeaterItemEventArgs) Handles RepDetails.ItemDataBound
        Dim sFile As String = ""

        Dim iIndex As Integer = e.Item.ItemIndex

        For Each ctr In e.Item.Controls
            If TypeOf (ctr) Is Label Then
                Dim lbl As New Label
                lbl = ctr
                If lbl.ID = "lblFilename" Then
                    sFile = lbl.Text
                    If Trim(sFile) = "" Then
                        For Each ctr2 In e.Item.Controls
                            If TypeOf (ctr2) Is Button Then
                                Dim btn As New Button
                                btn = ctr2
                                btn.Visible = False
                            End If
                        Next
                    End If
                End If
            End If
        Next


    End Sub

    Protected Sub btnUpload_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        If FileUpload1.HasFile Then
            Dim sext As String = Path.GetExtension(FileUpload1.PostedFile.FileName)
            If FileUpload1.PostedFile.ContentType = "application/vnd.ms-excel" Or FileUpload1.PostedFile.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" Or FileUpload1.PostedFile.ContentType = "application/x-zip-compressed" Or FileUpload1.PostedFile.ContentType = "application/pdf" Or FileUpload1.PostedFile.ContentType = "image/jpeg" Or FileUpload1.PostedFile.ContentType = "image/png" Or FileUpload1.PostedFile.ContentType = "image/gif" Or (FileUpload1.PostedFile.ContentType = "application/octet-stream" AndAlso sext = ".rar") Or FileUpload1.PostedFile.ContentType = "application/vnd.ms-excel" Then
                If FileUpload1.PostedFile.ContentLength <= 15750656 Then

                    Dim sFile As String = Now.ToString("yyyyMMdd-HHmmss") & "_" & Path.GetFileName(FileUpload1.FileName)
                    FileUpload1.SaveAs(ConfigurationManager.AppSettings("UploadDir") & sFile)
                    SaveData(sFile)

                Else
                    lblMessage.Text = "The file is too large. It must be less than or equal to 15MB."
                    lblMessage.Visible = True
                    lblMessage.CssClass = "label label-warning"
                End If
            Else
                lblMessage.Text = "The file is not allowed. The allowed files are excel(.xls, .xlsx, .csv), compressed file(.zip, .rar), pdf file, images(.jpeg, .png, .gif)"
                lblMessage.Visible = True
                lblMessage.CssClass = "label label-warning"
            End If
        Else
            SaveData("")
        End If
    End Sub

    Private Sub SaveData(ByVal sFilename As String)

        Using bll = New eCorporateBLL
            With bll
                Dim dt1 As New DataTable
                Dim sTitle As String = String.Empty
                Dim dtEmail As New DataTable

                bll.AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
                bll.record_id = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("dtl"), key)
                dt1 = bll.GetRequestDetail

                For Each dr As DataRow In dt1.Rows
                    sTitle = dr("subject")
                Next

                .Remarks = Trim(txtUploadRemarks.Text)
                .file_path = sFilename
                .uploaded_by = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("u"), key)
                .Username = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("u"), key)
                .AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
                .Title = sTitle
                .Is_Mother = False
                .MotherID = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("dtl"), key)
                If Request.QueryString("t") = "1" Then
                    .UserType = 1
                ElseIf Request.QueryString("t") = "2" Then
                    .UserType = 2
                Else
                    Exit Sub
                End If

                .Save_Endorsement_Request()
                dtEmail = .GetEmailFromRequest

                Dim sReceivers As String = String.Empty
                If dtEmail.Rows.Count > 0 Then

                    If dtEmail.Rows.Count > 1 Then
                        For Each dr As DataRow In dtEmail.Rows
                            sReceivers = sReceivers & "," & dr(0)
                        Next
                    Else
                        sReceivers = dtEmail(0)(0)
                    End If

                End If
                Dim sMessage As String = String.Empty

                sMessage = "<table><tr><td>Title:</td><td><strong>" & sTitle & "</td><tr><td>Created by: </td><td><strong>" & bll.User_Fullname & "</strong></td></tr></table>"
                sMessage = sMessage & "<p>This is to inform you that a new transaction has been sent to you from eMedicard. Please <a href='https://webportal.medicardphils.com/emedicard'>log in</a> to eMedicad to see the details.</p>"
                Mailhelper.MailHelper.SendMailMessage("noreply@medicardphils.com", sReceivers, "ctubig@gmail.com", "", "eMedicard Notification", sMessage)

            End With
            Response.Redirect("RequestDetails.aspx?t=" & Request.QueryString("t") & "&c=" & HttpUtility.UrlEncode(Request.QueryString("c")) & "&u=" & HttpUtility.UrlEncode(Request.QueryString("u")) & "&dtl=" & HttpUtility.UrlEncode(Request.QueryString("dtl")))
        End Using
    End Sub

    Protected Sub btnBakc_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnBakc.Click
        Response.Redirect("DocUpload.aspx?t=1&c=" & HttpUtility.UrlEncode(Request.QueryString("c")) & "&u=" & HttpUtility.UrlEncode(Request.QueryString("u")))
    End Sub
End Class