Imports emedicardBLL
Imports System.IO

Public Class DocUploading
    Inherits System.Web.UI.Page
    Dim key As String = ConfigurationManager.AppSettings("encryptionKey")
    Dim dtRequest As DataTable

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        If Not IsNothing(Request.QueryString("msg")) Then
            If Trim(Request.QueryString("msg")) <> "" Then

                lblMessage.Text = Trim(Request.QueryString("msg"))
                lblMessage.Visible = True

            End If
        End If

        If Not IsPostBack Then
            buttonDisabler()

            BindMembershipEndorsementCancelationRequest()
        End If

    End Sub
    Private Sub buttonDisabler()
        'SOLUTION 2: CHANGE THE BUTTON SUBMIT JS CODE SO THAT IT

        'DISABLES WHEN THE FORM IS VALID, PRIOR TO SUBMISSION

        'build the JS

        Dim sb As New StringBuilder()

        sb.Append("if (typeof(Page_ClientValidate) == 'function') { ")

        'if client-side does not validate, stop (this supports validation groups)

        'BUGFIX: must save, then restore the page validation / submission state, otherwise

        'when the validation fails, it prevents the FIRST autopostback from other controls

        sb.Append("var oldPage_IsValid = Page_IsValid; var oldPage_BlockSubmit = Page_BlockSubmit;")

        sb.Append("if (Page_ClientValidate('" + btnUpload.ValidationGroup & "') == false) {")

        sb.Append(" Page_IsValid = oldPage_IsValid; Page_BlockSubmit = oldPage_BlockSubmit; return false; }} ")

        'change button text and disable it

        sb.Append("this.value = 'Processing...';")

        sb.Append("this.disabled = true;")

        'insert the call to the framework JS code that does the postback of the form in the client

        'The default code generated by ASP (WebForm_DoPostbackWithOptions) will not

        'submit because the button is disabled (this is new in 2.0)

        sb.Append(ClientScript.GetPostBackEventReference(btnUpload, Nothing) & ";")

        'BUGFIX: MUST RETURN AFTER THIS, OTHERWISE IF THE BUTTON HAS UseSubmitBehavior=false

        'THEN ONE CLICK WILL IN FACT CAUSE 2 SUBMITS, DEFEATING THE WHOLE PURPOSE

        sb.Append("return true;")

        Dim submit_button_onclick_js As String = sb.ToString()

        btnUpload.Attributes.Add("onclick", submit_button_onclick_js)

    End Sub

    Private Sub BindMembershipEndorsementCancelationRequest()
        Try
            Using bll = New eCorporateBLL

                bll.AccountCode = Request.QueryString("a")
                bll.UserType = Trim(Request.QueryString("t"))
                dtRequest = bll.GetCorporateRequestList
                grdRequest.DataSource = dtRequest
                grdRequest.DataBind()

            End Using
        Catch ex As Exception

        End Try
    End Sub
    Protected Sub btnUpload_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        If FileUpload1.HasFile Then
            Dim sext As String = Path.GetExtension(FileUpload1.PostedFile.FileName)
            If FileUpload1.PostedFile.ContentType = "application/vnd.ms-excel" Or FileUpload1.PostedFile.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" Or FileUpload1.PostedFile.ContentType = "application/x-zip-compressed" Or FileUpload1.PostedFile.ContentType = "application/pdf" Or FileUpload1.PostedFile.ContentType = "image/jpeg" Or FileUpload1.PostedFile.ContentType = "image/png" Or FileUpload1.PostedFile.ContentType = "image/gif" Or (FileUpload1.PostedFile.ContentType = "application/octet-stream" AndAlso sext = ".rar") Or (FileUpload1.PostedFile.ContentType = "application/octet-stream" AndAlso sext = ".zip") Or FileUpload1.PostedFile.ContentType = "application/vnd.ms-excel" Then
                If FileUpload1.PostedFile.ContentLength <= 15750656 Then

                    Dim sFile As String = Now.ToString("yyyyMMdd-HHmmss") & "_" & Path.GetFileName(FileUpload1.FileName)
                    FileUpload1.SaveAs(ConfigurationManager.AppSettings("UploadDir") & sFile)
                    SaveData(sFile)

                Else
                    lblMessage.Text = "The file is too large. It must be less than or equal to 15MB."
                    lblMessage.Visible = True
                    lblMessage.CssClass = "label label-warning"
                End If
            Else
                lblMessage.Text = "The file is not allowed. The allowed files are excel(.xls, .xlsx, .csv), compressed file(.zip, .rar), pdf file, images(.jpeg, .png, .gif)"
                lblMessage.Visible = True
                lblMessage.CssClass = "label label-warning"
            End If
        Else
            SaveData("")
        End If


    End Sub

    Private Sub SaveData(ByVal sFilename As String)

        Dim lID As Long = 0

        Dim sAccountName As String = String.Empty
        Dim sAgnCode As String = String.Empty
        Dim sSender As String = String.Empty

        Using bll = New eCorporateBLL
            With bll

                .Remarks = Trim(txtUploadRemarks.Text)
                .file_path = sFilename
                .Username = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("u"), key)
                .uploaded_by = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("u"), key)
                .AccountCode = Request.QueryString("a")
                If ddlSubject.SelectedValue = "Other" Then
                    .Title = txtSubject.Text
                Else
                    .Title = ddlSubject.SelectedValue
                End If
                .Is_Mother = True
                If Not IsNothing(Request.QueryString("t")) Then
                    If Trim(Request.QueryString("t")) = "1" Then
                        .UserType = 1
                    ElseIf Trim(Request.QueryString("t")) = "2" Then
                        .UserType = 2
                    End If
                End If
                lID = .Save_Endorsement_Request()

                Using acctBLLInfo = New AccountInformationBLL(Request.QueryString("a"), 1)
                    sAccountName = acctBLLInfo.CompanyName
                    sAgnCode = acctBLLInfo.AgentCode
                End Using

                Dim sMsg As String
                Dim sTitle As String = txtSubject.Text
                Dim sDLink As String = String.Empty
                'Dim sUpdateLink
                'sDLink = "file://uranus/ECorporateFileUpload/" & sFilename
                sDLink = "https://webportal.medicardphils.com/eMedicard/DLPage.aspx?flname=" & HttpUtility.UrlEncode(sFilename)

                If ddlSubject.SelectedValue = "Other" Then
                    sTitle = txtSubject.Text
                Else
                    sTitle = ddlSubject.SelectedValue
                End If

                sMsg = "<p><strong>A new request has been arrived</strong><br/><span>Company Name:&nbsp;</span><strong>" & sAccountName & "</strong><br/><span>Subject:&nbsp;</span><strong>" & sTitle & "</strong></p>"
                sMsg = sMsg & "<p>" & Trim(txtUploadRemarks.Text) & "</p>"

                Using embll = New emedBLL

                    If bll.UserType = 1 Then
                        'Get eAccount
                        embll.application_type = "ecorp"
                    ElseIf bll.UserType = 2 Then
                        embll.application_type = "eaccount"
                    End If
                    If ddlSubject.Text = "Other" Then
                        embll.mail_description = "File Uploading Other"
                    Else
                        embll.mail_description = ddlSubject.Text
                    End If
                    embll.GetRecepients()

                    Dim dtCC As New DataTable
                    Dim sCC As String = String.Empty

                    Using oCorpBLL = New eCorporateBLL
                        oCorpBLL.AccountCode = Trim(Request.QueryString("a"))
                        oCorpBLL.GetAccountContactInfo()
                        If bll.UserType = 1 Then
                            'eCorporate
                            'Dim smail As String = embll.GetEmail("", "eaccount", sAgnCode)
                            'If embll.send_to_tag = "eaccount_main" Then
                            '    embll.send_to_email = embll.send_to_email & "," & oCorpBLL.EmailAddress
                            'End If
                        ElseIf bll.UserType = 2 Then
                            'eAccount
                            'If embll.send_to_tag = "ecorp_main" Then
                            '    embll.send_to_email = embll.send_to_email & "," & oCorpBLL.EmailAddress
                            'End If
                        End If

                        embll.prm_account_code = Trim(Request.QueryString("a"))
                        embll.prm_agent_code = sAgnCode
                        dtCC = embll.GetCC()

                        For Each dr As DataRow In dtCC.Rows
                            If Trim(sCC) = "" Then
                                sCC = dr(0)
                            Else
                                sCC = sCC & "," & dr(0)
                            End If
                        Next

                        If bll.UserType = 1 Then
                            sSender = embll.GetEmail(bll.Username, "ecorp")
                        ElseIf bll.UserType = 2 Then
                            sSender = embll.GetEmail(bll.Username, "eaccount")
                        End If

                        If Trim(embll.send_to_tag) <> "" Then
                            Select Case Trim(embll.send_to_tag)
                                Case "ecorp_main"

                                    If Trim(embll.send_to_email) <> "" Then
                                        embll.send_to_email = embll.send_to_email & " , " & embll.GetEmail("", "ecorp", "", bll.AccountCode)
                                    Else
                                        embll.send_to_email = embll.GetEmail("", "ecorp", "", bll.AccountCode)
                                    End If

                                Case "eaccount_main"

                                    If Trim(embll.send_to_email) <> "" Then
                                        embll.send_to_email = embll.send_to_email & " , " & embll.GetEmail("", "eaccount", sAgnCode, bll.AccountCode)
                                    Else
                                        embll.send_to_email = embll.GetEmail("", "eaccount", sAgnCode, bll.AccountCode)
                                    End If

                            End Select
                        End If

                        If embll.self Then
                            embll.send_to_email = embll.send_to_email & ", " & sSender
                        End If

                        If Trim(embll.send_to_email) <> "" Then
                            Dim bsent As Boolean = False
                            Mailhelper.MailHelper.SendMailMessage(sSender, embll.send_to_email, embll.bcc, sCC, sTitle, sMsg)
                            bsent = Mailhelper.MailHelper.Sent
                        End If

                    End Using

                    'Mailhelper.MailHelper.SendMailMessage(.uploaded_by, "mgabat@medicardphils.com", "ctubig@medicardphils.com", "ctubig@medicardphils.com", sTitle, sMsg)
                End Using

            End With

            'Response.Redirect("Endorsement.aspx?t=" & Request.QueryString("t") & "&c=" & Request.QueryString("c") & "&u=" & HttpUtility.UrlEncode(Request.QueryString("u")) & "&agnt=" & Request.QueryString("agnt") & "&a=" & Request.QueryString("a") & "&msg=The file has been uploaded.")
            Response.Redirect("DocUploading.aspx?t=" & Request.QueryString("t") & "&c=" & Request.QueryString("c") & "&u=" & HttpUtility.UrlEncode(Request.QueryString("u")) & "&agnt=" & Request.QueryString("agnt") & "&a=" & Request.QueryString("a") & "&msg=The file has been uploaded.")

        End Using
    End Sub
End Class