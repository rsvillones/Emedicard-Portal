Imports emedicardBLL
Imports System.IO

Public Class DocUpload
    Inherits System.Web.UI.Page
    Dim key As String = ConfigurationManager.AppSettings("encryptionKey")
    Dim dtRequest As DataTable

    Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load

        If Not IsNothing(Request.QueryString("msg")) Then
            If Trim(Request.QueryString("msg")) <> "" Then

                lblMessage.Text = Trim(Request.QueryString("msg"))
                lblMessage.Visible = True

            End If
        End If

        If Not IsPostBack Then
            buttonDisabler()

            'BindMembershipEndorsementCancelationRequest()
            GetRequestList(0)
            GetRequestList(1)
        End If

    End Sub

    Private Sub buttonDisabler()
        'SOLUTION 2: CHANGE THE BUTTON SUBMIT JS CODE SO THAT IT

        'DISABLES WHEN THE FORM IS VALID, PRIOR TO SUBMISSION

        'build the JS

        Dim sb As New StringBuilder()

        sb.Append("if (typeof(Page_ClientValidate) == 'function') { ")

        'if client-side does not validate, stop (this supports validation groups)

        'BUGFIX: must save, then restore the page validation / submission state, otherwise

        'when the validation fails, it prevents the FIRST autopostback from other controls

        sb.Append("var oldPage_IsValid = Page_IsValid; var oldPage_BlockSubmit = Page_BlockSubmit;")

        sb.Append("if (Page_ClientValidate('" + btnUpload.ValidationGroup & "') == false) {")

        sb.Append(" Page_IsValid = oldPage_IsValid; Page_BlockSubmit = oldPage_BlockSubmit; return false; }} ")

        'change button text and disable it

        sb.Append("this.value = 'Processing...';")

        sb.Append("this.disabled = true;")

        'insert the call to the framework JS code that does the postback of the form in the client

        'The default code generated by ASP (WebForm_DoPostbackWithOptions) will not

        'submit because the button is disabled (this is new in 2.0)

        sb.Append(ClientScript.GetPostBackEventReference(btnUpload, Nothing) & ";")

        'BUGFIX: MUST RETURN AFTER THIS, OTHERWISE IF THE BUTTON HAS UseSubmitBehavior=false

        'THEN ONE CLICK WILL IN FACT CAUSE 2 SUBMITS, DEFEATING THE WHOLE PURPOSE

        sb.Append("return true;")

        Dim submit_button_onclick_js As String = sb.ToString()

        btnUpload.Attributes.Add("onclick", submit_button_onclick_js)

    End Sub

    Private Sub GetRequestList(ByVal itype As Short)
        Try
            Using bll = New eCorporateBLL
                If Request.QueryString("t") = "1" Then
                    bll.UserType = 1
                ElseIf Request.QueryString("t") = "2" Then
                    bll.UserType = 2
                Else
                    Exit Sub
                End If

                bll.AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
                bll.Request_Type = itype
                dtRequest = bll.GetCorporateRequestListAll

                For Each dr As DataRow In dtRequest.Rows
                    If Len(Trim(dr(1).ToString)) > 100 Then
                        dr(1) = Right(dr(1), 100) & "..."
                        dtRequest.AcceptChanges()
                    End If
                Next

                If itype = 0 Then
                    grdRequest.DataSource = dtRequest
                    grdRequest.DataBind()
                ElseIf itype = 1 Then
                    grdRequestDone.DataSource = dtRequest
                    grdRequestDone.DataBind()
                End If

            End Using
        Catch ex As Exception

        End Try
    End Sub

    'Private Sub BindMembershipEndorsementCancelationRequest()
    '    Try
    '        Using bll = New eCorporateBLL

    '            bll.AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
    '            bll.UserType = 1
    '            dtRequest = bll.GetCorporateRequestList
    '            grdRequest.DataSource = dtRequest
    '            grdRequest.DataBind()

    '        End Using
    '    Catch ex As Exception

    '    End Try
    'End Sub

    Protected Sub grdRequest_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles grdRequest.RowCommand
        If (e.CommandName = "DownloadFile") Then
            ' Retrieve the row index stored in the CommandArgument property.
            Dim index As Integer = Convert.ToInt32(e.CommandArgument)

            Dim grow As GridViewRow = grdRequest.Rows(index)

            Dim sFilename As String = grdRequest.Rows(index).Cells(3).Text

            Dim sPath As String = String.Empty

            If Trim(sFilename) <> "" And sFilename <> "&nbsp;" Then
                Response.Clear()

                Response.ClearContent()
                Response.ClearHeaders()
                Response.BufferOutput = True

                Response.AddHeader("Content-Disposition", "attachment; filename=" + sFilename)
                Response.ContentType = "application/octet-stream"
                'Response.WriteFile("F:\ECorporateFileUpload\" & sFilename)
                Response.WriteFile(ConfigurationManager.AppSettings("UploadDir") & sFilename)
                Response.End()
                HttpContext.Current.ApplicationInstance.CompleteRequest()
            End If

        ElseIf e.CommandName = "ViewDetail" Then

            Dim index As Integer = Convert.ToInt32(e.CommandArgument)
            Dim sRequestID As String = grdRequest.Rows(index).Cells(0).Text

            sRequestID = EncryptDecrypt.EncryptDecrypt.Encrypt(sRequestID, key)
            Dim sAcct As String = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)

            Response.Redirect("RequestDetails.aspx?t=1&c=" & HttpUtility.UrlEncode(EncryptDecrypt.EncryptDecrypt.Encrypt(sAcct, key)) & "&u=" & HttpUtility.UrlEncode(Request.QueryString("u")) & "&dtl=" & HttpUtility.UrlEncode(sRequestID))

        End If
    End Sub

    Protected Sub grdRequestDoneDone_RowCommand(ByVal sender As Object, ByVal e As System.Web.UI.WebControls.GridViewCommandEventArgs) Handles grdRequestDone.RowCommand
        If (e.CommandName = "DownloadFile") Then
            ' Retrieve the row index stored in the CommandArgument property.
            Dim index As Integer = Convert.ToInt32(e.CommandArgument)

            Dim grow As GridViewRow = grdRequestDone.Rows(index)

            Dim sFilename As String = grdRequestDone.Rows(index).Cells(3).Text

            Dim sPath As String = String.Empty

            If Trim(sFilename) <> "" And sFilename <> "&nbsp;" Then
                Response.Clear()

                Response.ClearContent()
                Response.ClearHeaders()
                Response.BufferOutput = True

                Response.AddHeader("Content-Disposition", "attachment; filename=" + sFilename)
                Response.ContentType = "application/octet-stream"
                'Response.WriteFile("F:\ECorporateFileUpload\" & sFilename)
                Response.WriteFile(ConfigurationManager.AppSettings("UploadDir") & sFilename)
                Response.End()
                HttpContext.Current.ApplicationInstance.CompleteRequest()
            End If

        ElseIf e.CommandName = "ViewDetail" Then

            Dim index As Integer = Convert.ToInt32(e.CommandArgument)
            Dim sRequestID As String = grdRequestDone.Rows(index).Cells(0).Text

            sRequestID = EncryptDecrypt.EncryptDecrypt.Encrypt(sRequestID, key)
            Dim sAcct As String = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)

            Response.Redirect("RequestDetails.aspx?t=1&c=" & HttpUtility.UrlEncode(EncryptDecrypt.EncryptDecrypt.Encrypt(sAcct, key)) & "&u=" & HttpUtility.UrlEncode(Request.QueryString("u")) & "&dtl=" & HttpUtility.UrlEncode(sRequestID))

        End If
    End Sub

    Protected Sub btnUpload_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnUpload.Click
        'If FileUpload1.HasFile Then
        '    Dim sext As String = Path.GetExtension(FileUpload1.PostedFile.FileName)
        '    If FileUpload1.PostedFile.ContentType = "application/vnd.ms-excel" Or FileUpload1.PostedFile.ContentType = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" Or FileUpload1.PostedFile.ContentType = "application/x-zip-compressed" Or FileUpload1.PostedFile.ContentType = "application/pdf" Or FileUpload1.PostedFile.ContentType = "image/jpeg" Or FileUpload1.PostedFile.ContentType = "image/png" Or FileUpload1.PostedFile.ContentType = "image/gif" Or (FileUpload1.PostedFile.ContentType = "application/octet-stream" AndAlso sext = ".rar") Or FileUpload1.PostedFile.ContentType = "application/vnd.ms-excel" Then
        '        If FileUpload1.PostedFile.ContentLength <= 15750656 Then

        '            Dim sFile As String = Now.ToString("yyyyMMdd-HHmmss") & "_" & Path.GetFileName(FileUpload1.FileName)
        '            FileUpload1.SaveAs(ConfigurationManager.AppSettings("UploadDir") & sFile)
        '            SaveData(sFile)

        '        Else
        '            lblMessage.Text = "The file is too large. It must be less than or equal to 15MB."
        '            lblMessage.Visible = True
        '            lblMessage.CssClass = "label label-warning"
        '        End If
        '    Else
        '        lblMessage.Text = "The file is not allowed. The allowed files are excel(.xls, .xlsx, .csv), compressed file(.zip, .rar), pdf file, images(.jpeg, .png, .gif)"
        '        lblMessage.Visible = True
        '        lblMessage.CssClass = "label label-warning"
        '    End If
        'Else
        '    SaveData("")
        'End If


    End Sub

    Private Sub SaveData(ByVal sFilename As String)

        Dim lID As Long = 0

        Dim sAccountName As String = String.Empty
        Dim sAgnCode As String = String.Empty

        Using bll = New eCorporateBLL
            With bll

                If Trim(sFilename) = "" And Trim(txtUploadRemarks.Text) = "" Then
                    .Remarks = "No attachement"
                    .file_path = sFilename
                Else
                    .Remarks = Trim(txtUploadRemarks.Text)
                    .file_path = sFilename
                End If
                .uploaded_by = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("u"), key)
                .Username = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("u"), key)
                .AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
                If ddlSubject.SelectedValue = "Other" Then
                    .Title = txtSubject.Text
                Else
                    .Title = ddlSubject.SelectedValue
                End If
                .Is_Mother = True
                .UserType = 1
                lID = .Save_Endorsement_Request()

                Using acctBLLInfo = New eAccountBLL

                    acctBLLInfo.AccountCode = EncryptDecrypt.EncryptDecrypt.Decrypt(Request.QueryString("c"), key)
                    sAccountName = acctBLLInfo.GetCompanyName
                    sAgnCode = acctBLLInfo.AgentCode
                End Using


                Dim sMsg As String
                Dim sTitle As String = txtSubject.Text
                Dim sDLink As String = String.Empty
                'Dim sUpdateLink
                'sDLink = "file://uranus/ECorporateFileUpload/" & sFilename
                sDLink = ConfigurationManager.AppSettings("BaseUrl") & "/DLPage.aspx?flname=" & HttpUtility.UrlEncode(sFilename)

                If ddlSubject.SelectedValue = "Other" Then
                    sTitle = txtSubject.Text
                Else
                    sTitle = ddlSubject.SelectedValue
                End If
                sMsg = "<p><span>Company Name:&nbsp;</span><strong>" & sAccountName & "</strong><br/><span>Subject:&nbsp;</span><strong>" & sTitle & "</strong></p>"
                sMsg = sMsg & "<p>" & Trim(txtUploadRemarks.Text) & "</p>"

                If ddlSubject.SelectedValue = "Other" Then
                    Using oActBLL = New eAccountBLL
                        oActBLL.AgentCode = sAgnCode
                        oActBLL.GetAgentInfoByCode()
                        'oActBLL.EmailAddress = "rtayong@medicardphils.com"

                        If ddlSubject.SelectedValue = "Other" Then
                            'Mailhelper.MailHelper.SendMailMessage(.uploaded_by, "sfrancisco@medicardphils.com", "ctubig@medicardphils.com,ctubig@medicardphils.com,slozada@medicardphils.com,rtayong@medicardphils.com", "edalupang@medicardphils.com,avasquez@medicardphils.com", sTitle, sMsg)
                        Else
                            'Mailhelper.MailHelper.SendMailMessage(.uploaded_by, "mgabat@medicardphils.com", "ctubig@medicardphils.com,ctubig@medicardphils.com,slozada@medicardphils.com,rtayong@medicardphils.com", "jagosto@medicardphils.com", sTitle, sMsg)
                        End If
                        Mailhelper.MailHelper.SendMailMessage(.uploaded_by, oActBLL.EmailAddress, "ctubig@medicardphils.com", "sfrancisco@medicardphils.com,edalupang@medicardphils.com,avasquez@medicardphils.com", sTitle, sMsg)
                    End Using
                Else
                    Mailhelper.MailHelper.SendMailMessage(.uploaded_by, "mgabat@medicardphils.com", "ctubig@medicardphils.com", "jagosto@medicardphils.com", sTitle, sMsg)
                    'Mailhelper.MailHelper.SendMailMessage(.uploaded_by, "ctubig@medicardphils.com", "ctubig@medicardphils.com", "ctubig@medicardphils.com", sTitle, sMsg)
                End If

                'Mailhelper.MailHelper.SendMailMessage(.uploaded_by, "mgabat@medicardphils.com", "ctubig@medicardphils.com,ctubig@medicardphils.com,slozada@medicardphils.com,rtayong@medicardphils.com", "jagosto@medicardphils.com,edalupang@medicardphils.com,avasquez@medicardphils.com,sfrancisco@medicardphils.com", sTitle, sMsg)
                'Mailhelper.MailHelper.SendMailMessage(.uploaded_by, "ctubig@medicardphils.com", "ctubig@medicardphils.com", "ctubig@medicardphils.com", sTitle, sMsg)

            End With

            Response.Redirect("DocUpload.aspx?t=1&c=" & HttpUtility.UrlEncode(Request.QueryString("c")) & "&u=" & HttpUtility.UrlEncode(Request.QueryString("u")))

        End Using
    End Sub


End Class